import{q as W,r as y,c as Y,x as X,a as d,b as t,t as c,y as J,f as h,v as R,E as K,k as Q,F as C,g as T,d as x,h as E,n as A,o as u}from"./4Al0cLfe.js";import{u as Z}from"./-W0ciY3d.js";const ee={class:"py-8 md:py-12"},te={class:"container-custom"},se={class:"grid grid-cols-1 lg:grid-cols-3 gap-8"},oe={class:"lg:col-span-1"},ne={class:"bg-white rounded-lg shadow-sm p-6"},le={class:"text-lg font-semibold text-neutral-800 mb-4"},ie={class:"space-y-2"},re=["onUpdate:modelValue"],ae=["onClick"],de={class:"flex gap-2"},ue=["disabled"],ce={key:0,class:"i-iconify-ph-spinner text-lg animate-spin mr-2"},me={class:"lg:col-span-2"},ve={class:"bg-white rounded-lg shadow-sm overflow-hidden"},pe={class:"p-6 border-b border-neutral-200"},fe={class:"flex items-center justify-between"},ge={class:"flex items-center gap-2"},ye={key:0,class:"p-6 text-center"},xe={key:1,class:"p-6 text-center"},he={class:"text-neutral-500"},be={key:2,class:"divide-y divide-neutral-100"},Re={class:"flex items-start justify-between"},Ee={class:"flex-1"},Ae={class:"flex items-center gap-3 mb-2"},ke={class:"font-semibold text-neutral-900"},we={class:"space-y-1 text-sm text-neutral-600"},De={key:0,class:"flex items-center gap-2"},Ne={class:"flex items-center gap-2"},Se={key:1,class:"flex items-center gap-2"},_e={key:2,class:"flex items-center gap-2"},Ce={key:3,class:"flex items-start gap-2 mt-2"},Te={class:"flex items-center gap-2 ml-4"},$e=["onClick","title"],Me={class:"sr-only"},Ie=["onClick"],qe=["onClick"],Be={__name:"medication-reminders",setup(Ue){const a=Z(),v=W(),r=y([]),p=y(!1),g=y(!0),f=y(!1),b=y(null),i=y({medicationName:"",dosage:"",frequency:"daily",timeSlots:["08:00"],notes:""}),N=Y(()=>{let s=r.value;return g.value&&(s=r.value.filter(e=>e.isActive)),L([...s])}),k=async()=>{var s;try{p.value=!0;const e=await $fetch("/api/medication-reminders",{headers:{Authorization:`Bearer ${v.token}`}});console.log("=== LOAD REMINDERS DEBUG ==="),console.log("API Response:",e),console.log("Reminders from API:",e.reminders),console.log("Number of reminders loaded:",((s=e.reminders)==null?void 0:s.length)||0);const o=(e.reminders||[]).map(n=>({...n,nextReminder:n.isActive?B(n.frequency,n.timeSlots):null}));r.value=o,console.log("Processed reminders with IDs:",r.value.map(n=>({id:n.id,name:n.medicationName,idType:typeof n.id}))),console.log("=== END LOAD REMINDERS DEBUG ===")}catch(e){console.error("Error loading reminders:",e),a.error("Failed to load medication reminders")}finally{p.value=!1}},$=async()=>{try{if(p.value=!0,!U())return;if(f.value){const s=await $fetch(`/api/medication-reminders/${b.value}`,{method:"PATCH",body:i.value,headers:{Authorization:`Bearer ${v.token}`}}),e=r.value.findIndex(o=>o.id===b.value);e!==-1&&(r.value[e]=s.reminder),a.success("Medication reminder updated successfully!"),S()}else{console.log("=== CREATING NEW REMINDER ==="),console.log("Request data:",i.value),console.log("Auth token:",v.token?"EXISTS":"MISSING");const s=await $fetch("/api/medication-reminders",{method:"POST",body:i.value,headers:{Authorization:`Bearer ${v.token}`}});console.log("✅ CREATE SUCCESS - Response:",s),console.log("New reminder received:",s.reminder),console.log("Current reminders before adding:",r.value.length),r.value.unshift(s.reminder),console.log("Current reminders after adding:",r.value.length),console.log("All reminder IDs:",r.value.map(e=>e.id)),a.success("Medication reminder added successfully!")}_()}catch(s){console.error("Error saving reminder:",s),a.error(`Failed to ${f.value?"update":"add"} medication reminder`)}finally{p.value=!1}},M=async s=>{try{const e=await $fetch(`/api/medication-reminders/${s.id}`,{method:"PATCH",body:{isActive:!s.isActive},headers:{Authorization:`Bearer ${v.token}`}});s.isActive=e.reminder.isActive,a.success(`Reminder ${s.isActive?"resumed":"paused"} successfully`)}catch(e){console.error("Error toggling reminder:",e),a.error("Failed to update reminder")}},I=async s=>{var e,o,n;if(console.log("=== DELETE FUNCTION CALLED ==="),console.log("Raw reminderId parameter:",s),console.log("Type of reminderId:",typeof s),console.log("Is undefined?",s===void 0),console.log("Is null?",s===null),!!confirm("Are you sure you want to delete this reminder?"))try{if(console.log("🔄 Refreshing data before delete..."),await k(),console.log("=== DELETE REMINDER DEBUG ==="),console.log("Attempting to delete reminder:",{id:s,type:typeof s,currentReminders:r.value.map(m=>({id:m.id,name:m.medicationName,type:typeof m.id}))}),console.log("Auth token exists:",!!v.token),console.log("User info:",{userId:(e=v.user)==null?void 0:e.id,email:(o=v.user)==null?void 0:o.email}),s==null){console.log("❌ Invalid reminderId - cannot proceed with delete"),a.error("Invalid reminder ID - cannot delete");return}const l=r.value.find(m=>m.id===s);if(console.log("Reminder exists in current list (after refresh):",!!l),l)console.log("Found reminder to delete:",{id:l.id,name:l.medicationName,userId:l.userId});else{console.log("❌ Reminder not found in current list even after refresh!"),console.log("Available reminder IDs:",r.value.map(m=>m.id)),console.log("Looking for ID:",s),a.error("Reminder no longer exists - data refreshed");return}const w=await $fetch(`/api/medication-reminders/${s}`,{method:"DELETE",headers:{Authorization:`Bearer ${v.token}`}});console.log("Delete response:",w),r.value=r.value.filter(m=>m.id!==s),a.success("Reminder deleted successfully")}catch(l){console.error("=== DELETE ERROR ==="),console.error("Error deleting reminder:",l),console.log("Error details:",{status:l.status,statusCode:l.statusCode,statusMessage:l.statusMessage,data:l.data}),a.error("Failed to delete reminder: "+(((n=l.data)==null?void 0:n.statusMessage)||l.statusMessage||l.message))}},q=s=>{f.value=!0,b.value=s.id,i.value={medicationName:s.medicationName,dosage:s.dosage||"",frequency:s.frequency,timeSlots:[...s.timeSlots||["08:00"]],notes:s.notes||""},window.scrollTo({top:0,behavior:"smooth"}),a.info('Editing reminder - modify details and click "Update Reminder"')},S=()=>{f.value=!1,b.value=null,_(),a.info("Edit cancelled")},_=()=>{i.value={medicationName:"",dosage:"",frequency:"daily",timeSlots:["08:00"],notes:""}},U=()=>i.value.medicationName.trim()?!!F():(a.error("Please enter a medication name"),!1),F=()=>{for(const s of i.value.timeSlots)if(!s||!/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/.test(s))return a.error("Please enter valid time slots (HH:MM format)"),!1;return!0},L=s=>s.sort((e,o)=>e.isActive!==o.isActive?o.isActive-e.isActive:e.nextReminder&&o.nextReminder?new Date(e.nextReminder)-new Date(o.nextReminder):e.medicationName.localeCompare(o.medicationName)),B=(s,e)=>{if(!e||e.length===0)return null;const o=new Date,n=new Date(o.getFullYear(),o.getMonth(),o.getDate());for(const O of e.sort()){const[G,j]=O.split(":").map(Number),D=new Date(n);if(D.setHours(G,j,0,0),D>o)return D}const l=new Date(n);l.setDate(l.getDate()+1);const[w,m]=e.sort()[0].split(":").map(Number);return l.setHours(w,m,0,0),l},P=()=>{i.value.timeSlots.push("09:00")},V=s=>{i.value.timeSlots.length>1&&i.value.timeSlots.splice(s,1)},z=s=>({daily:"Once daily","twice-daily":"Twice daily","three-times-daily":"Three times daily","every-8-hours":"Every 8 hours","every-12-hours":"Every 12 hours",weekly:"Weekly","as-needed":"As needed"})[s]||s,H=s=>new Date(s).toLocaleDateString("en-US",{month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"});return X(()=>{k()}),(s,e)=>(u(),d("div",ee,[t("div",te,[e[22]||(e[22]=t("h1",{class:"text-2xl md:text-3xl font-bold text-neutral-900 mb-6"},"Medication Reminders",-1)),t("div",se,[t("div",oe,[t("div",ne,[t("h2",le,c(f.value?"Edit Reminder":"Add New Reminder"),1),t("form",{onSubmit:J($,["prevent"]),class:"space-y-4"},[t("div",null,[e[6]||(e[6]=t("label",{class:"block text-sm font-medium text-neutral-700 mb-1"},"Medication Name *",-1)),h(t("input",{"onUpdate:modelValue":e[0]||(e[0]=o=>i.value.medicationName=o),type:"text",class:"input",required:"",placeholder:"Enter medication name"},null,512),[[R,i.value.medicationName]])]),t("div",null,[e[7]||(e[7]=t("label",{class:"block text-sm font-medium text-neutral-700 mb-1"},"Dosage",-1)),h(t("input",{"onUpdate:modelValue":e[1]||(e[1]=o=>i.value.dosage=o),type:"text",class:"input",placeholder:"e.g., 1 tablet, 5ml"},null,512),[[R,i.value.dosage]])]),t("div",null,[e[9]||(e[9]=t("label",{class:"block text-sm font-medium text-neutral-700 mb-1"},"Frequency *",-1)),h(t("select",{"onUpdate:modelValue":e[2]||(e[2]=o=>i.value.frequency=o),class:"input",required:""},e[8]||(e[8]=[Q('<option value="daily">Daily</option><option value="twice-daily">Twice Daily</option><option value="three-times-daily">Three Times Daily</option><option value="every-8-hours">Every 8 hours</option><option value="every-12-hours">Every 12 hours</option><option value="weekly">Weekly</option><option value="as-needed">As Needed</option>',7)]),512),[[K,i.value.frequency]])]),t("div",null,[e[10]||(e[10]=t("label",{class:"block text-sm font-medium text-neutral-700 mb-1"},"Reminder Times",-1)),t("div",ie,[(u(!0),d(C,null,T(i.value.timeSlots,(o,n)=>(u(),d("div",{key:n,class:"flex items-center gap-2"},[h(t("input",{"onUpdate:modelValue":l=>i.value.timeSlots[n]=l,type:"time",class:"input flex-1"},null,8,re),[[R,i.value.timeSlots[n]]]),t("button",{type:"button",onClick:l=>V(n),class:"text-red-500 hover:text-red-700 p-1 rounded border hover:bg-red-50"}," 🗑️ ",8,ae)]))),128)),t("button",{type:"button",onClick:P,class:"text-sm text-primary-600 hover:text-primary-700"}," + Add Time ")])]),t("div",null,[e[11]||(e[11]=t("label",{class:"block text-sm font-medium text-neutral-700 mb-1"},"Notes",-1)),h(t("textarea",{"onUpdate:modelValue":e[3]||(e[3]=o=>i.value.notes=o),class:"input h-20",placeholder:"Any additional notes"},null,512),[[R,i.value.notes]])]),t("div",de,[t("button",{type:"submit",class:"btn-primary flex-1",disabled:p.value},[p.value?(u(),d("span",ce)):x("",!0),E(" "+c(f.value?"Update Reminder":"Add Reminder"),1)],8,ue),f.value?(u(),d("button",{key:0,type:"button",onClick:S,class:"btn-outline px-4"}," Cancel ")):x("",!0)])],32)])]),t("div",me,[t("div",ve,[t("div",pe,[t("div",fe,[e[12]||(e[12]=t("h2",{class:"text-lg font-semibold text-neutral-800"},"Your Active Reminders",-1)),t("div",ge,[t("button",{onClick:k,class:"btn-outline text-sm px-3 py-1",title:"Refresh reminders"}," Refresh "),t("button",{onClick:e[4]||(e[4]=o=>g.value=!0),class:A([g.value?"btn-primary":"btn-outline","text-sm px-3 py-1"])}," Active ",2),t("button",{onClick:e[5]||(e[5]=o=>g.value=!1),class:A([g.value?"btn-outline":"btn-primary","text-sm px-3 py-1"])}," All ",2)])])]),p.value?(u(),d("div",ye,e[13]||(e[13]=[t("div",{class:"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto"},null,-1),t("p",{class:"text-neutral-500 mt-2"},"Loading reminders...",-1)]))):N.value.length===0?(u(),d("div",xe,[e[14]||(e[14]=t("div",{class:"w-16 h-16 mx-auto mb-4 rounded-full bg-neutral-100 flex items-center justify-center"},[t("span",{class:"text-2xl"},"🔕")],-1)),t("p",he,c(g.value?"No active reminders set up yet.":"No reminders found."),1)])):(u(),d("div",be,[(u(!0),d(C,null,T(N.value,o=>(u(),d("div",{key:o.id,class:"p-6"},[t("div",Re,[t("div",Ee,[t("div",Ae,[t("h3",ke,c(o.medicationName),1),t("span",{class:A([o.isActive?"bg-success-100 text-success-800":"bg-neutral-100 text-neutral-800","px-2 py-1 text-xs rounded-full"])},c(o.isActive?"Active":"Inactive"),3)]),t("div",we,[o.dosage?(u(),d("p",De,[e[15]||(e[15]=t("span",{class:"text-primary-500"},"💊",-1)),t("span",null,c(o.dosage),1)])):x("",!0),t("p",Ne,[e[16]||(e[16]=t("span",{class:"text-primary-500"},"⏰",-1)),t("span",null,c(z(o.frequency)),1)]),o.timeSlots&&o.timeSlots.length>0?(u(),d("div",Se,[e[17]||(e[17]=t("span",{class:"text-primary-500"},"🔔",-1)),t("span",null,c(o.timeSlots.join(", ")),1)])):x("",!0),o.nextReminder?(u(),d("p",_e,[e[18]||(e[18]=t("span",{class:"text-primary-500"},"📅",-1)),t("span",null,"Next: "+c(H(o.nextReminder)),1)])):x("",!0),o.notes?(u(),d("p",Ce,[e[19]||(e[19]=t("span",{class:"text-primary-500 mt-0.5"},"📝",-1)),t("span",null,c(o.notes),1)])):x("",!0)])]),t("div",Te,[t("button",{onClick:n=>M(o),class:A([o.isActive?"text-orange-600 hover:text-orange-700 hover:bg-orange-50":"text-green-600 hover:text-green-700 hover:bg-green-50","p-2 rounded-lg transition-colors border border-gray-200 hover:border-current"]),title:o.isActive?"Pause reminder":"Resume reminder"},[E(c(o.isActive?"⏸️":"▶️")+" ",1),t("span",Me,c(o.isActive?"Pause":"Resume"),1)],10,$e),t("button",{onClick:n=>q(o),class:"p-2 text-blue-600 hover:text-blue-700 hover:bg-blue-50 rounded-lg transition-colors border border-gray-200 hover:border-blue-300",title:"Edit reminder"},e[20]||(e[20]=[E(" ✏️ "),t("span",{class:"sr-only"},"Edit",-1)]),8,Ie),t("button",{onClick:n=>I(o.id),class:"p-2 text-red-600 hover:text-red-700 hover:bg-red-50 rounded-lg transition-colors border border-gray-200 hover:border-red-300",title:"Delete reminder"},e[21]||(e[21]=[E(" 🗑️ "),t("span",{class:"sr-only"},"Delete",-1)]),8,qe)])])]))),128))]))])])])])]))}};export{Be as default};
