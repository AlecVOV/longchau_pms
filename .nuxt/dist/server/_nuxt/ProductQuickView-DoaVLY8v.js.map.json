{"file":"ProductQuickView-DoaVLY8v.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsNsB,0BAAsB;AAE5C,UAAM,QAAQ;AAaR,UAAA,WAAW,IAAI,CAAC;AAChB,UAAA,qBAAqB,IAAI,CAAC;AAC1B,UAAA,kBAAkB,IAAI,KAAK;AAG3B,UAAA,gBAAgB,SAAS,MAAM;;AACnC,UAAI,GAAC,WAAM,YAAN,mBAAe,gBAAe,CAAC;AAEpC,UAAI,MAAM,QAAQ,MAAM,QAAQ,MAAM,GAAG;AACvC,eAAO,MAAM,QAAQ;AAAA,MAAA;AAGvB,UAAI,OAAO,MAAM,QAAQ,WAAW,UAAU;AACxC,YAAA;AACF,gBAAM,SAAS,KAAK,MAAM,MAAM,QAAQ,MAAM;AAC9C,iBAAO,MAAM,QAAQ,MAAM,IAAI,SAAS,CAAC,MAAM;AAAA,QAAA,QACzC;AACC,iBAAA,CAAC,MAAM,QAAQ,MAAM;AAAA,QAAA;AAAA,MAC9B;AAGF,aAAO,CAAC;AAAA,IAAA,CACT;AAGK,UAAA,kBAAkB,CAAC,YAAY;AAC/B,UAAA,cAAc,MAAM,SAAS,GAAG;AAClC,eAAO,cAAc,MAAM,mBAAmB,KAAK,KAAK,cAAc,MAAM,CAAC;AAAA,MAAA;AAG/E,cAAO,mCAAS,UAAS;AAAA,IAC3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../components/ProductQuickView.vue"],"sourcesContent":["<template>\r\n  <Teleport to=\"body\">\r\n    <div\r\n      v-if=\"isOpen\"\r\n      class=\"fixed inset-0 z-50 flex items-center justify-center p-4\"\r\n      aria-labelledby=\"modal-title\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n    >\r\n      <!-- Background overlay -->\r\n      <div\r\n        class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\r\n        @click=\"closeModal\"\r\n      ></div>\r\n\r\n      <!-- Modal -->\r\n      <div\r\n        class=\"relative bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\"\r\n      >\r\n        <!-- Close button -->\r\n        <div class=\"absolute top-4 right-4 z-10\">\r\n          <button\r\n            @click=\"closeModal\"\r\n            class=\"bg-white rounded-full p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-50 transition-colors shadow-md\"\r\n          >\r\n            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Modal content -->\r\n        <div v-if=\"product\" class=\"p-6\">\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n            <!-- Product Image -->\r\n            <div class=\"space-y-4\">\r\n              <div class=\"aspect-square overflow-hidden rounded-lg bg-gray-100\">\r\n                <img\r\n                  :src=\"getProductImage(product)\"\r\n                  :alt=\"product.name\"\r\n                  class=\"w-full h-full object-cover\"\r\n                />\r\n              </div>\r\n              \r\n              <!-- Thumbnail images if multiple -->\r\n              <div v-if=\"productImages.length > 1\" class=\"flex space-x-2 overflow-x-auto\">\r\n                <button\r\n                  v-for=\"(image, index) in productImages\"\r\n                  :key=\"index\"\r\n                  @click=\"selectedImageIndex = index\"\r\n                  :class=\"{\r\n                    'ring-2 ring-blue-500': selectedImageIndex === index,\r\n                    'ring-1 ring-gray-300': selectedImageIndex !== index\r\n                  }\"\r\n                  class=\"flex-shrink-0 w-16 h-16 rounded-lg overflow-hidden\"\r\n                >\r\n                  <img\r\n                    :src=\"image\"\r\n                    :alt=\"`${product.name} ${index + 1}`\"\r\n                    class=\"w-full h-full object-cover\"\r\n                  />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Product Details -->\r\n            <div class=\"space-y-6\">\r\n              <!-- Product Title & Category -->\r\n              <div>\r\n                <p class=\"text-sm text-gray-500 mb-1\">{{ product.category?.name || product.category }}</p>\r\n                <h1 class=\"text-2xl font-bold text-gray-900\">{{ product.name }}</h1>\r\n              </div>\r\n\r\n              <!-- Rating -->\r\n              <div class=\"flex items-center space-x-2\">\r\n                <div class=\"flex text-yellow-400\">\r\n                  <span v-for=\"n in 5\" :key=\"n\" \r\n                        :class=\"[n <= Math.floor(product.rating || 4.5) ? 'i-iconify-ph-star-fill' : 'i-iconify-ph-star text-gray-300']\"></span>\r\n                </div>\r\n                <span class=\"text-sm text-gray-500\">({{ product.reviews || 0 }} reviews)</span>\r\n              </div>\r\n\r\n              <!-- Price -->\r\n              <div class=\"space-y-2\">\r\n                <div class=\"flex items-center space-x-2\">\r\n                  <span v-if=\"product.discount > 0\" class=\"text-lg text-gray-500 line-through\">\r\n                    ${{ (product.price * (1 + product.discount / 100)).toFixed(2) }}\r\n                  </span>\r\n                  <span class=\"text-2xl font-bold text-gray-900\">${{ product.price.toFixed(2) }}</span>\r\n                  <span v-if=\"product.discount > 0\" class=\"bg-red-100 text-red-800 text-sm font-medium px-2 py-1 rounded\">\r\n                    {{ product.discount }}% OFF\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Stock Status -->\r\n              <div>\r\n                <span v-if=\"product.stock > 0\" class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                  <svg class=\"w-1.5 h-1.5 mr-1\" fill=\"currentColor\" viewBox=\"0 0 8 8\">\r\n                    <circle cx=\"4\" cy=\"4\" r=\"3\"/>\r\n                  </svg>\r\n                  In Stock ({{ product.stock }} available)\r\n                </span>\r\n                <span v-else class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\r\n                  Out of Stock\r\n                </span>\r\n              </div>\r\n\r\n              <!-- Short Description -->\r\n              <div v-if=\"product.shortDescription || product.description\">\r\n                <h3 class=\"text-lg font-medium text-gray-900 mb-2\">Description</h3>\r\n                <p class=\"text-gray-600 text-sm leading-relaxed\">\r\n                  {{ product.shortDescription || product.description || 'No description available.' }}\r\n                </p>\r\n              </div>\r\n\r\n              <!-- Product Details -->\r\n              <div v-if=\"product.manufacturer || product.sku\" class=\"space-y-2\">\r\n                <h3 class=\"text-lg font-medium text-gray-900\">Product Details</h3>\r\n                <div class=\"grid grid-cols-2 gap-4 text-sm\">\r\n                  <div v-if=\"product.sku\">\r\n                    <span class=\"font-medium text-gray-500\">SKU:</span>\r\n                    <span class=\"ml-2 text-gray-900\">{{ product.sku }}</span>\r\n                  </div>\r\n                  <div v-if=\"product.manufacturer\">\r\n                    <span class=\"font-medium text-gray-500\">Brand:</span>\r\n                    <span class=\"ml-2 text-gray-900\">{{ product.manufacturer }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Quantity Selector -->\r\n              <div v-if=\"!product.requiresPrescription && product.stock > 0\">\r\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Quantity</label>\r\n                <div class=\"flex items-center space-x-3\">\r\n                  <button\r\n                    @click=\"quantity = Math.max(1, quantity - 1)\"\r\n                    class=\"w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50\"\r\n                  >\r\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 12H4\" />\r\n                    </svg>\r\n                  </button>\r\n                  <span class=\"w-12 text-center font-medium\">{{ quantity }}</span>\r\n                  <button\r\n                    @click=\"quantity = Math.min(product.stock, quantity + 1)\"\r\n                    class=\"w-8 h-8 rounded-full border border-gray-300 flex items-center justify-center hover:bg-gray-50\"\r\n                  >\r\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Action Buttons -->\r\n              <div class=\"space-y-3\">\r\n                <template v-if=\"product.requiresPrescription\">\r\n                  <NuxtLink \r\n                    :to=\"`/product/${product.slug}`\" \r\n                    class=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 transition-colors font-medium text-center block\"\r\n                  >\r\n                    View Details (Prescription Required)\r\n                  </NuxtLink>\r\n                </template>\r\n                <template v-else-if=\"product.stock > 0\">\r\n                  <button\r\n                    @click=\"addToCart\"\r\n                    class=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 transition-colors font-medium\"\r\n                  >\r\n                    Add to Cart - ${{ (product.price * quantity).toFixed(2) }}\r\n                  </button>\r\n                </template>\r\n                <template v-else>\r\n                  <button disabled class=\"w-full bg-gray-300 text-gray-500 py-3 px-4 rounded-lg cursor-not-allowed font-medium\">\r\n                    Out of Stock\r\n                  </button>\r\n                </template>\r\n                \r\n                <div class=\"flex space-x-3\">\r\n                  <button\r\n                    @click=\"addToWishlist\"\r\n                    class=\"flex-1 border border-gray-300 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-50 transition-all duration-300 font-medium flex items-center justify-center\"\r\n                    :class=\"{ 'border-red-300 text-red-500 bg-red-50': wishlistClicked }\"\r\n                  >\r\n                    <!-- Outlined heart when not clicked -->\r\n                    <svg v-if=\"!wishlistClicked\" class=\"w-5 h-5 mr-2 transition-all duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\r\n                    </svg>\r\n                    <!-- Filled heart when clicked -->\r\n                    <svg v-else class=\"w-5 h-5 mr-2 transition-all duration-300 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\r\n                    </svg>\r\n                    Wishlist\r\n                  </button>\r\n                  <NuxtLink \r\n                    :to=\"`/product/${product.slug}`\"\r\n                    class=\"flex-1 border border-gray-300 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-50 transition-colors font-medium text-center\"\r\n                  >\r\n                    View Full Details\r\n                  </NuxtLink>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Teleport>\r\n</template>\r\n\r\n<script setup>\r\nimport { useNotificationsStore } from '~/stores/notifications'\r\n\r\nconst notifications = useNotificationsStore()\r\n\r\nconst props = defineProps({\r\n  isOpen: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  product: {\r\n    type: Object,\r\n    default: null\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['close', 'add-to-cart', 'add-to-wishlist'])\r\n\r\nconst quantity = ref(1)\r\nconst selectedImageIndex = ref(0)\r\nconst wishlistClicked = ref(false)\r\n\r\n// Computed property for product images\r\nconst productImages = computed(() => {\r\n  if (!props.product?.images) return []\r\n  \r\n  if (Array.isArray(props.product.images)) {\r\n    return props.product.images\r\n  }\r\n  \r\n  if (typeof props.product.images === 'string') {\r\n    try {\r\n      const parsed = JSON.parse(props.product.images)\r\n      return Array.isArray(parsed) ? parsed : [parsed]\r\n    } catch {\r\n      return [props.product.images]\r\n    }\r\n  }\r\n  \r\n  return []\r\n})\r\n\r\n// Helper function to get the correct product image\r\nconst getProductImage = (product) => {\r\n  if (productImages.value.length > 0) {\r\n    return productImages.value[selectedImageIndex.value] || productImages.value[0]\r\n  }\r\n  \r\n  return product?.image || '/placeholder-product.jpg'\r\n}\r\n\r\n// Methods\r\nconst closeModal = () => {\r\n  emit('close')\r\n  quantity.value = 1\r\n  selectedImageIndex.value = 0\r\n  // Keep wishlistClicked state - don't reset it\r\n}\r\n\r\nconst addToCart = () => {\r\n  emit('add-to-cart', {\r\n    product: props.product,\r\n    quantity: quantity.value\r\n  })\r\n  closeModal()\r\n}\r\n\r\nconst addToWishlist = () => {\r\n  wishlistClicked.value = true\r\n  notifications.success(`${props.product.name} added to wishlist!`, {\r\n    duration: 3000\r\n  })\r\n  emit('add-to-wishlist', props.product)\r\n  \r\n  // No timeout - keep the heart filled permanently\r\n}\r\n\r\n// Close modal on escape key\r\nconst handleKeydown = (e) => {\r\n  if (e.key === 'Escape' && props.isOpen) {\r\n    closeModal()\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  if (process.client) {\r\n    document.addEventListener('keydown', handleKeydown)\r\n  }\r\n})\r\n\r\nonUnmounted(() => {\r\n  if (process.client) {\r\n    document.removeEventListener('keydown', handleKeydown)\r\n  }\r\n})\r\n</script>\r\n"],"version":3}