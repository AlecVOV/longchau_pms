{"version":3,"file":"reset-password-B_3L5Z_K.js","sources":["../../../../pages/reset-password.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-purple-50 to-indigo-100 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n    <div class=\"max-w-md w-full space-y-8\">\r\n      <!-- Header -->\r\n      <div class=\"text-center\">\r\n        <NuxtLink to=\"/\" class=\"inline-block\">\r\n          <h1 class=\"text-3xl font-bold text-purple-600\">Long Châu</h1>\r\n        </NuxtLink>\r\n        <h2 class=\"mt-6 text-3xl font-extrabold text-gray-900\">\r\n          Set new password\r\n        </h2>\r\n        <p class=\"mt-2 text-sm text-gray-600\">\r\n          Enter your new password below.\r\n        </p>\r\n      </div>\r\n\r\n      <!-- Reset Password Form -->\r\n      <form @submit.prevent=\"handleResetPassword\" class=\"mt-8 space-y-6\">\r\n        <div class=\"bg-white p-8 rounded-lg shadow-lg\">\r\n          <!-- Error Message -->\r\n          <div v-if=\"error\" class=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n            {{ error }}\r\n          </div>\r\n\r\n          <!-- Success Message -->\r\n          <div v-if=\"success\" class=\"mb-4 p-3 bg-green-100 border border-green-400 text-green-700 rounded\">\r\n            {{ success }}\r\n          </div>\r\n\r\n          <!-- Invalid Token Message -->\r\n          <div v-if=\"invalidToken\" class=\"text-center space-y-4\">\r\n            <div class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100\">\r\n              <svg class=\"h-6 w-6 text-red-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <h3 class=\"text-lg font-medium text-gray-900\">Invalid or expired link</h3>\r\n              <p class=\"mt-2 text-sm text-gray-600\">\r\n                This password reset link is invalid or has expired.\r\n              </p>\r\n              <NuxtLink to=\"/forgot-password\" class=\"mt-4 inline-block text-purple-600 hover:text-purple-500 text-sm font-medium\">\r\n                Request a new reset link\r\n              </NuxtLink>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Reset Form -->\r\n          <div v-else-if=\"!passwordReset\" class=\"space-y-4\">\r\n            <!-- New Password Field -->\r\n            <div>\r\n              <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">\r\n                New Password\r\n              </label>\r\n              <div class=\"mt-1 relative\">\r\n                <input\r\n                  id=\"password\"\r\n                  v-model=\"form.password\"\r\n                  :type=\"showPassword ? 'text' : 'password'\"\r\n                  required\r\n                  class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-purple-500 focus:border-purple-500\"\r\n                  :class=\"{ 'border-red-500': passwordError }\"\r\n                  placeholder=\"Enter new password\"\r\n                  @input=\"validatePassword\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  @click=\"showPassword = !showPassword\"\r\n                  class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                >\r\n                  <svg v-if=\"!showPassword\" class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                  </svg>\r\n                  <svg v-else class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L12 12m-3.122-3.122l4.243 4.243M15 12a3 3 0 00-3-3m0 0a3 3 0 00-3 3\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              \r\n              <!-- Password Strength Indicator -->\r\n              <div class=\"mt-2\">\r\n                <div class=\"flex space-x-1\">\r\n                  <div\r\n                    v-for=\"i in 4\"\r\n                    :key=\"i\"\r\n                    class=\"h-1 w-1/4 rounded\"\r\n                    :class=\"getPasswordStrengthClass(i)\"\r\n                  ></div>\r\n                </div>\r\n                <p class=\"mt-1 text-xs text-gray-600\">\r\n                  Password strength: {{ passwordStrengthText }}\r\n                </p>\r\n              </div>\r\n              <p v-if=\"passwordError\" class=\"mt-1 text-sm text-red-600\">{{ passwordError }}</p>\r\n            </div>\r\n\r\n            <!-- Confirm Password Field -->\r\n            <div>\r\n              <label for=\"confirmPassword\" class=\"block text-sm font-medium text-gray-700\">\r\n                Confirm New Password\r\n              </label>\r\n              <input\r\n                id=\"confirmPassword\"\r\n                v-model=\"form.confirmPassword\"\r\n                :type=\"showConfirmPassword ? 'text' : 'password'\"\r\n                required\r\n                class=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-purple-500 focus:border-purple-500\"\r\n                :class=\"{ 'border-red-500': confirmPasswordError }\"\r\n                placeholder=\"Confirm new password\"\r\n                @blur=\"validateConfirmPassword\"\r\n              />\r\n              <p v-if=\"confirmPasswordError\" class=\"mt-1 text-sm text-red-600\">{{ confirmPasswordError }}</p>\r\n            </div>\r\n\r\n            <!-- Submit Button -->\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                :disabled=\"loading || !isFormValid\"\r\n                class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                <span v-if=\"loading\" class=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                  <svg class=\"animate-spin h-5 w-5 text-purple-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                  </svg>\r\n                </span>\r\n                {{ loading ? 'Updating password...' : 'Update password' }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Success State -->\r\n          <div v-else class=\"text-center space-y-4\">\r\n            <div class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\r\n              <svg class=\"h-6 w-6 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\r\n              </svg>\r\n            </div>\r\n            <div>\r\n              <h3 class=\"text-lg font-medium text-gray-900\">Password updated successfully</h3>\r\n              <p class=\"mt-2 text-sm text-gray-600\">\r\n                Your password has been updated. You can now sign in with your new password.\r\n              </p>\r\n              <NuxtLink to=\"/login\" class=\"mt-4 inline-block bg-purple-600 text-white px-4 py-2 rounded-md hover:bg-purple-700 text-sm font-medium\">\r\n                Sign in now\r\n              </NuxtLink>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\ndefinePageMeta({\r\n  layout: false,\r\n  middleware: 'guest'\r\n})\r\n\r\nuseHead({\r\n  title: 'Reset Password - Long Châu',\r\n  meta: [\r\n    { name: 'description', content: 'Reset your Long Châu account password. Enter your new password to regain access to your account.' }\r\n  ]\r\n})\r\n\r\nconst route = useRoute()\r\nconst token = route.query.token\r\nconst email = route.query.email\r\n\r\nconst form = ref({\r\n  password: '',\r\n  confirmPassword: ''\r\n})\r\n\r\nconst showPassword = ref(false)\r\nconst showConfirmPassword = ref(false)\r\nconst loading = ref(false)\r\nconst error = ref('')\r\nconst success = ref('')\r\nconst passwordError = ref('')\r\nconst confirmPasswordError = ref('')\r\nconst invalidToken = ref(false)\r\nconst passwordReset = ref(false)\r\n\r\n// Password strength calculation\r\nconst passwordStrength = computed(() => {\r\n  const password = form.value.password\r\n  let strength = 0\r\n  \r\n  if (password.length >= 8) strength++\r\n  if (/[a-z]/.test(password) && /[A-Z]/.test(password)) strength++\r\n  if (/\\d/.test(password)) strength++\r\n  if (/[!@#$%^&*(),.?\":{}|<>]/.test(password)) strength++\r\n  \r\n  return strength\r\n})\r\n\r\nconst passwordStrengthText = computed(() => {\r\n  const strength = passwordStrength.value\r\n  if (strength === 0) return 'Very weak'\r\n  if (strength === 1) return 'Weak'\r\n  if (strength === 2) return 'Fair'\r\n  if (strength === 3) return 'Good'\r\n  return 'Strong'\r\n})\r\n\r\nconst getPasswordStrengthClass = (index) => {\r\n  const strength = passwordStrength.value\r\n  if (index <= strength) {\r\n    if (strength <= 1) return 'bg-red-500'\r\n    if (strength === 2) return 'bg-yellow-500'\r\n    if (strength === 3) return 'bg-blue-500'\r\n    return 'bg-green-500'\r\n  }\r\n  return 'bg-gray-200'\r\n}\r\n\r\nconst isFormValid = computed(() => {\r\n  return form.value.password &&\r\n         form.value.confirmPassword &&\r\n         !passwordError.value &&\r\n         !confirmPasswordError.value\r\n})\r\n\r\nconst validatePassword = () => {\r\n  const password = form.value.password\r\n  if (password.length < 8) {\r\n    passwordError.value = 'Password must be at least 8 characters long'\r\n  } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(password)) {\r\n    passwordError.value = 'Password must contain at least one uppercase letter, one lowercase letter, and one number'\r\n  } else {\r\n    passwordError.value = ''\r\n  }\r\n  \r\n  if (form.value.confirmPassword) {\r\n    validateConfirmPassword()\r\n  }\r\n}\r\n\r\nconst validateConfirmPassword = () => {\r\n  if (form.value.password !== form.value.confirmPassword) {\r\n    confirmPasswordError.value = 'Passwords do not match'\r\n  } else {\r\n    confirmPasswordError.value = ''\r\n  }\r\n}\r\n\r\nconst handleResetPassword = async () => {\r\n  error.value = ''\r\n  success.value = ''\r\n  loading.value = true\r\n\r\n  validatePassword()\r\n  validateConfirmPassword()\r\n\r\n  if (passwordError.value || confirmPasswordError.value) {\r\n    loading.value = false\r\n    return\r\n  }\r\n\r\n  try {\r\n    const response = await $fetch('/api/auth/reset-password', {\r\n      method: 'POST',\r\n      body: {\r\n        token,\r\n        email,\r\n        password: form.value.password,\r\n        confirmPassword: form.value.confirmPassword\r\n      }\r\n    })\r\n\r\n    success.value = 'Password has been reset successfully!'\r\n    passwordReset.value = true\r\n    \r\n  } catch (err) {\r\n    if (err.status === 400 || err.status === 404) {\r\n      invalidToken.value = true\r\n    } else {\r\n      error.value = err.data?.message || 'Failed to reset password. Please try again.'\r\n    }\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// Validate token on mount\r\nonMounted(async () => {\r\n  if (!token || !email) {\r\n    invalidToken.value = true\r\n    return\r\n  }\r\n\r\n  try {\r\n    await $fetch('/api/auth/validate-reset-token', {\r\n      method: 'POST',\r\n      body: { token, email }\r\n    })\r\n  } catch (err) {\r\n    invalidToken.value = true\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.animate-spin {\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n</style>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAkKA,YAAQ;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,QACJ,EAAE,MAAM,eAAe,SAAS,mGAAoG;AAAA,MACrI;AAAA,IACH,CAAC;AAED,UAAM,QAAQ,SAAU;AACV,UAAM,MAAM;AACZ,UAAM,MAAM;AAE1B,UAAM,OAAO,IAAI;AAAA,MACf,UAAU;AAAA,MACV,iBAAiB;AAAA,IACnB,CAAC;AAED,UAAM,eAAe,IAAI,KAAK;AAC9B,UAAM,sBAAsB,IAAI,KAAK;AACrC,UAAM,UAAU,IAAI,KAAK;AACzB,UAAM,QAAQ,IAAI,EAAE;AACpB,UAAM,UAAU,IAAI,EAAE;AACtB,UAAM,gBAAgB,IAAI,EAAE;AAC5B,UAAM,uBAAuB,IAAI,EAAE;AACnC,UAAM,eAAe,IAAI,KAAK;AAC9B,UAAM,gBAAgB,IAAI,KAAK;AAG/B,UAAM,mBAAmB,SAAS,MAAM;AACtC,YAAM,WAAW,KAAK,MAAM;AAC5B,UAAI,WAAW;AAEf,UAAI,SAAS,UAAU,EAAG;AAC1B,UAAI,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,EAAG;AACtD,UAAI,KAAK,KAAK,QAAQ,EAAG;AACzB,UAAI,yBAAyB,KAAK,QAAQ,EAAG;AAE7C,aAAO;AAAA,IACT,CAAC;AAED,UAAM,uBAAuB,SAAS,MAAM;AAC1C,YAAM,WAAW,iBAAiB;AAClC,UAAI,aAAa,EAAG,QAAO;AAC3B,UAAI,aAAa,EAAG,QAAO;AAC3B,UAAI,aAAa,EAAG,QAAO;AAC3B,UAAI,aAAa,EAAG,QAAO;AAC3B,aAAO;AAAA,IACT,CAAC;AAED,UAAM,2BAA2B,CAAC,UAAU;AAC1C,YAAM,WAAW,iBAAiB;AAClC,UAAI,SAAS,UAAU;AACrB,YAAI,YAAY,EAAG,QAAO;AAC1B,YAAI,aAAa,EAAG,QAAO;AAC3B,YAAI,aAAa,EAAG,QAAO;AAC3B,eAAO;AAAA,MACR;AACD,aAAO;AAAA,IACT;AAEA,UAAM,cAAc,SAAS,MAAM;AACjC,aAAO,KAAK,MAAM,YACX,KAAK,MAAM,mBACX,CAAC,cAAc,SACf,CAAC,qBAAqB;AAAA,IAC/B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}