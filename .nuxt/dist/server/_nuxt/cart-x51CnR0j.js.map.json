{"file":"cart-x51CnR0j.js","mappings":";;;;;;;;;;;;;;;;;;;;AAuJA,UAAM,YAAY,aAAY;AACR,0BAAqB;AAG3C,UAAM,YAAY,IAAI,EAAE;AACxB,UAAM,aAAa,IAAI,EAAE;AACzB,UAAM,eAAe,IAAI,EAAE;AAC3B,UAAM,WAAW,IAAI,CAAC;AACH,QAAI,CAAE,CAAA;AAGzB,UAAM,YAAY,SAAS,MAAM,UAAU,KAAK;AAChD,UAAM,gBAAgB,SAAS,MAAM,UAAU,SAAS;AACxD,UAAM,YAAY,SAAS,MAAM,UAAU,KAAK;AAGhD,UAAM,WAAW,SAAS,MAAM,UAAU,QAAQ,KAAK,IAAI,IAAI;AAC/D,UAAM,MAAM,SAAS,MAAM,UAAU,QAAQ,IAAI;AACjD,UAAM,aAAa,SAAS,MAAM,UAAU,QAAQ,SAAS,QAAQ,IAAI,QAAQ,SAAS,KAAK;AAiF/F,UAAM,WAAW,MAAM;AACrB,iBAAW,QAAQ;AACnB,mBAAa,QAAQ;AAAA,IACvB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../pages/cart.vue"],"sourcesContent":["<template>\n  <div class=\"py-8 md:py-12\">\n    <div class=\"container-custom\">\n      <div class=\"flex items-center justify-between mb-6\">\n        <h1 class=\"text-2xl md:text-3xl font-bold text-neutral-900\">Cart Items ({{ cartItemCount }})</h1>\n        <button @click=\"clearCart\" class=\"text-sm text-neutral-500 hover:text-accent-600\">Clear Cart</button>\n      </div>\n\n      <div v-if=\"cartItems.length === 0\" class=\"bg-white rounded-lg shadow-sm p-8 text-center\">\n        <div class=\"w-20 h-20 mx-auto mb-4 rounded-full bg-neutral-100 flex items-center justify-center\">\n          <span class=\"i-iconify-ph-shopping-cart-fill text-3xl text-neutral-400\"></span>\n        </div>\n        <h2 class=\"text-xl font-semibold text-neutral-800 mb-3\">Your cart is empty</h2>\n        <p class=\"text-neutral-600 mb-6\">Looks like you haven't added any items to your cart yet.</p>\n        <NuxtLink to=\"/\" class=\"btn-primary\">Continue Shopping</NuxtLink>\n      </div>\n      \n      <div v-else class=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        <!-- Cart Items -->\n        <div class=\"lg:col-span-2\">\n          <div class=\"bg-white rounded-lg shadow-sm divide-y divide-neutral-100\">\n            <div v-for=\"(item, index) in cartItems\" :key=\"index\" \n                 class=\"p-6 flex items-start space-x-4\">\n              <!-- Product Image -->\n              <div class=\"w-24 h-24 flex-shrink-0\">\n                <img :src=\"item.image\" :alt=\"item.name\" class=\"w-full h-full object-cover rounded-md\">\n              </div>\n              \n              <!-- Product Details -->\n              <div class=\"flex-1 min-w-0\">\n                <div class=\"flex justify-between\">\n                  <div>\n                    <h3 class=\"text-lg font-medium text-neutral-900 mb-1\">{{ item.name }}</h3>\n                    <p class=\"text-sm text-neutral-500\">Unit Price: ${{ item.price.toFixed(2) }}</p>\n                  </div>\n                  <p class=\"text-lg font-medium text-neutral-900\">${{ (item.price * item.quantity).toFixed(2) }}</p>\n                </div>\n\n                <div class=\"flex items-center justify-between mt-4\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"inline-flex items-center border border-neutral-200 rounded-md\">\n                      <button @click=\"updateQuantity(index, item.quantity - 1)\"\n                              :disabled=\"item.quantity <= 1\"\n                              class=\"w-10 h-10 flex items-center justify-center text-neutral-600 hover:bg-neutral-50 disabled:opacity-50\">\n                        <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 12H4\" />\n                        </svg>\n                      </button>\n                      <span class=\"w-12 text-center font-medium\">{{ item.quantity }}</span>\n                      <button @click=\"updateQuantity(index, item.quantity + 1)\"\n                              :disabled=\"item.quantity >= 10\"\n                              class=\"w-10 h-10 flex items-center justify-center text-neutral-600 hover:bg-neutral-50 disabled:opacity-50\">\n                        <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n                  \n                  <div class=\"flex items-center space-x-3\">\n                    <button @click=\"saveForLater(index)\" \n                            class=\"px-4 py-2 rounded-md bg-primary-600 text-white hover:bg-white hover:text-primary-600 border border-primary-600 transition-all duration-500\">\n                      Save for Later\n                    </button>\n                    <button @click=\"removeItem(index)\" \n                            class=\"px-4 py-2 rounded-md bg-accent-600 text-white hover:bg-white hover:text-accent-600 border border-accent-600 transition-all duration-500\">\n                      Remove\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Continue Shopping Link -->\n          <div class=\"mt-6\">\n            <NuxtLink to=\"/\" class=\"inline-flex items-center text-primary-600 hover:text-primary-700\">\n              <span class=\"i-iconify-ph-arrow-left text-lg mr-2\"></span>\n              Continue Shopping\n            </NuxtLink>\n          </div>\n        </div>\n\n        <!-- Order Summary -->\n        <div class=\"lg:col-span-1\">\n          <div class=\"bg-white rounded-lg shadow-sm sticky top-24\">\n            <div class=\"p-6\">\n              <h2 class=\"text-xl font-semibold text-neutral-900 mb-6\">Order Summary</h2>\n              \n              <div class=\"space-y-4 text-neutral-600\">\n                <div class=\"flex justify-between\">\n                  <span>Subtotal</span>\n                  <span class=\"font-medium text-neutral-900\">${{ cartTotal.toFixed(2) }}</span>\n                </div>\n                <div class=\"flex justify-between\">\n                  <span>Shipping</span>\n                  <span v-if=\"cartTotal > 50\" class=\"text-success-600 font-medium\">Free</span>\n                  <span v-else class=\"font-medium text-neutral-900\">${{ shipping.toFixed(2) }}</span>\n                </div>\n                <div class=\"flex justify-between\">\n                  <span>Tax (8%)</span>\n                  <span class=\"font-medium text-neutral-900\">${{ tax.toFixed(2) }}</span>\n                </div>\n\n                <!-- Discount Code (if applicable) -->\n                <div v-if=\"discount > 0\" class=\"flex justify-between text-success-600\">\n                  <span>Discount</span>\n                  <span>-${{ discount.toFixed(2) }}</span>\n                </div>\n                \n                <div class=\"border-t border-neutral-200 pt-4 mt-4\">\n                  <div class=\"flex justify-between text-lg\">\n                    <span class=\"font-semibold text-neutral-900\">Total</span>\n                    <span class=\"font-bold text-neutral-900\">${{ orderTotal.toFixed(2) }}</span>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Discount Code Input -->\n              <div class=\"mb-6\">\n                <div class=\"flex gap-2\">\n                  <input type=\"text\" placeholder=\"Promo code\" v-model=\"promoCode\" class=\"input flex-grow\">\n                  <button @click=\"applyPromoCode\" class=\"btn-outline px-4 whitespace-nowrap\">Apply</button>\n                </div>\n                <p v-if=\"promoError\" class=\"text-sm text-accent-600 mt-1\">{{ promoError }}</p>\n                <p v-if=\"promoSuccess\" class=\"text-sm text-success-600 mt-1\">{{ promoSuccess }}</p>\n              </div>\n              \n              <!-- Checkout Button -->\n              <NuxtLink to=\"/checkout\" class=\"btn-primary w-full flex justify-center py-3\">\n                Proceed to Checkout\n              </NuxtLink>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\ndefinePageMeta({\n  middleware: 'auth'\n})\n\nimport { ref, computed, watch } from 'vue'\nimport { useCartStore } from '~/stores/cart'\nimport { useNotificationsStore } from '~/stores/notifications'\n\n// Import stores\nconst cartStore = useCartStore()\nconst notifications = useNotificationsStore()\n\n// State\nconst promoCode = ref('')\nconst promoError = ref('')\nconst promoSuccess = ref('')\nconst discount = ref(0)\nconst savedItems = ref([])\n\n// Get cart items from store\nconst cartItems = computed(() => cartStore.items)\nconst cartItemCount = computed(() => cartStore.itemCount)\nconst cartTotal = computed(() => cartStore.total)\n\n// Calculate shipping, tax, and order total\nconst shipping = computed(() => cartTotal.value > 50 ? 0 : 5.99)\nconst tax = computed(() => cartTotal.value * 0.08)\nconst orderTotal = computed(() => cartTotal.value + shipping.value + tax.value - discount.value)\n\n// Methods\nconst updateQuantity = async (index, quantity) => {\n  if (quantity > 0 && quantity <= 10) {\n    const item = cartItems.value[index]\n    if (item) {\n      await cartStore.updateQuantity(item.id, quantity)\n      notifications.success('Cart updated successfully')\n    }\n  }\n}\n\nconst removeItem = (index) => {\n  const item = cartItems.value[index]\n  if (item) {\n    cartStore.removeItem(item.id)\n    notifications.success('Item removed from cart')\n  }\n}\n\nconst clearCart = () => {\n  cartStore.clearCart()\n  notifications.success('Cart cleared successfully')\n}\n\nconst saveForLater = (index) => {\n  const item = cartItems.value[index]\n  if (item) {\n    // Add the item to saved items\n    savedItems.value.push({ ...item })\n    \n    // Remove from cart using product ID\n    cartStore.removeItem(item.id)\n    notifications.success('Item saved for later')\n  }\n}\n\nconst moveToCart = (index) => {\n  const item = savedItems.value[index]\n  if (item) {\n    // Add the item back to cart\n    cartStore.addItem(item, item.quantity)\n    \n    // Remove from saved items\n    savedItems.value.splice(index, 1)\n    notifications.success('Item moved back to cart')\n  }\n}\n\nconst removeSavedItem = (index) => {\n  savedItems.value.splice(index, 1)\n  notifications.success('Saved item removed')\n}\n\nconst applyPromoCode = () => {\n  promoError.value = ''\n  promoSuccess.value = ''\n  \n  if (promoCode.value.trim() === '') {\n    promoError.value = 'Please enter a promo code'\n    return\n  }\n  \n  // Check for valid promo codes (in a real app, this would be validated against a database)\n  if (promoCode.value.toLowerCase() === 'welcome10') {\n    discount.value = cartTotal.value * 0.1 // 10% discount\n    promoSuccess.value = 'Promo code applied successfully! You saved $' + discount.value.toFixed(2)\n  } else if (promoCode.value.toLowerCase() === 'freeship') {\n    if (cartTotal.value <= 50) {\n      discount.value = shipping.value\n      promoSuccess.value = 'Free shipping applied!'\n    } else {\n      promoError.value = 'Free shipping is already applied to orders over $50'\n    }\n  } else {\n    promoError.value = 'Invalid promo code'\n  }\n}\n\n// Reset error messages when promo code changes\nwatch(promoCode, () => {\n  promoError.value = ''\n  promoSuccess.value = ''\n})\n</script>"],"version":3}