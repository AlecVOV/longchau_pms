{"version":3,"file":"ImageUploader-CSv1yPKh.js","sources":["../../../../components/ImageUploader.vue"],"sourcesContent":["<template>\r\n  <div class=\"image-uploader\">\r\n    <!-- Drop zone -->\r\n    <div\r\n      @drop=\"handleDrop\"\r\n      @dragover.prevent\r\n      @dragenter.prevent\r\n      @dragleave=\"handleDragLeave\"\r\n      :class=\"[\r\n        'border-2 border-dashed rounded-lg p-6 text-center transition-colors',\r\n        isDragOver ? 'border-primary-500 bg-primary-50' : 'border-gray-300',\r\n        disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer hover:border-primary-400'\r\n      ]\"\r\n      @click=\"!disabled && $refs.fileInput.click()\"\r\n    >\r\n      <!-- Upload icon and text -->\r\n      <div v-if=\"!uploading && !images.length\" class=\"space-y-2\">\r\n        <svg class=\"mx-auto w-12 h-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n        </svg>\r\n        <div>\r\n          <p class=\"text-sm text-gray-600\">\r\n            <span class=\"font-medium text-primary-600\">Click to upload</span> or drag and drop\r\n          </p>\r\n          <p class=\"text-xs text-gray-500\">PNG, JPG, GIF up to {{ maxSizeMB }}MB each</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Upload progress -->\r\n      <div v-if=\"uploading\" class=\"space-y-3\">\r\n        <div class=\"animate-spin w-8 h-8 border-2 border-primary-600 border-t-transparent rounded-full mx-auto\"></div>\r\n        <p class=\"text-sm text-gray-600\">Uploading {{ uploadingCount }} of {{ totalUploadCount }} images...</p>\r\n        <div class=\"w-full bg-gray-200 rounded-full h-2\">\r\n          <div class=\"bg-primary-600 h-2 rounded-full transition-all duration-300\" :style=\"{ width: uploadProgress + '%' }\"></div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Image preview grid -->\r\n      <div v-if=\"images.length && !uploading\" class=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n        <div v-for=\"(image, index) in images\" :key=\"image.id || index\" class=\"relative group\">\r\n          <img\r\n            :src=\"image.preview || image.url\"\r\n            :alt=\"image.alt || `Image ${index + 1}`\"\r\n            class=\"w-full h-24 object-cover rounded-lg\"\r\n            @error=\"handleImageError(image)\"\r\n          />\r\n          \r\n          <!-- Image overlay actions -->\r\n          <div class=\"absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 transition-opacity rounded-lg flex items-center justify-center space-x-2\">\r\n            <button\r\n              @click.stop=\"setAsPrimary(index)\"\r\n              :class=\"[\r\n                'p-1 rounded text-xs',\r\n                image.isPrimary ? 'bg-yellow-500 text-white' : 'bg-white text-gray-700 hover:bg-gray-100'\r\n              ]\"\r\n              :title=\"image.isPrimary ? 'Primary image' : 'Set as primary'\"\r\n            >\r\n              <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n              </svg>\r\n            </button>\r\n            \r\n            <button\r\n              @click.stop=\"removeImage(index)\"\r\n              class=\"p-1 bg-red-500 text-white rounded hover:bg-red-600\"\r\n              title=\"Remove image\"\r\n            >\r\n              <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Primary badge -->\r\n          <div v-if=\"image.isPrimary\" class=\"absolute top-1 left-1\">\r\n            <span class=\"bg-yellow-500 text-white text-xs px-1 py-0.5 rounded\">Primary</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Add more button -->\r\n        <div\r\n          v-if=\"images.length < maxImages\"\r\n          @click=\"$refs.fileInput.click()\"\r\n          class=\"w-full h-24 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center cursor-pointer hover:border-primary-400 hover:bg-gray-50 transition-colors\"\r\n        >\r\n          <svg class=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Hidden file input -->\r\n    <input\r\n      ref=\"fileInput\"\r\n      type=\"file\"\r\n      multiple\r\n      :accept=\"acceptedTypes\"\r\n      @change=\"handleFileSelect\"\r\n      class=\"hidden\"\r\n      :disabled=\"disabled\"\r\n    />\r\n\r\n    <!-- Error messages -->\r\n    <div v-if=\"errors.length\" class=\"mt-3 space-y-1\">\r\n      <p v-for=\"error in errors\" :key=\"error\" class=\"text-sm text-red-600\">{{ error }}</p>\r\n    </div>\r\n\r\n    <!-- Image details form -->\r\n    <div v-if=\"showImageDetails && selectedImage\" class=\"mt-4 p-4 border rounded-lg bg-gray-50\">\r\n      <h4 class=\"font-medium mb-3\">Image Details</h4>\r\n      <div class=\"space-y-3\">\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700 mb-1\">Alt Text</label>\r\n          <input\r\n            v-model=\"selectedImage.alt\"\r\n            type=\"text\"\r\n            class=\"input\"\r\n            placeholder=\"Describe this image for accessibility\"\r\n            @input=\"updateImageDetails\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700 mb-1\">Caption</label>\r\n          <input\r\n            v-model=\"selectedImage.caption\"\r\n            type=\"text\"\r\n            class=\"input\"\r\n            placeholder=\"Optional image caption\"\r\n            @input=\"updateImageDetails\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useNotificationsStore } from '~/stores/notifications'\r\n\r\nconst props = defineProps({\r\n  modelValue: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n  maxImages: {\r\n    type: Number,\r\n    default: 10\r\n  },\r\n  maxSizeMB: {\r\n    type: Number,\r\n    default: 5\r\n  },\r\n  acceptedTypes: {\r\n    type: String,\r\n    default: 'image/jpeg,image/jpg,image/png,image/gif,image/webp'\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  showImageDetails: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue', 'upload-complete', 'upload-error'])\r\n\r\nconst notifications = useNotificationsStore()\r\n\r\n// Reactive data\r\nconst images = ref([...props.modelValue])\r\nconst isDragOver = ref(false)\r\nconst uploading = ref(false)\r\nconst uploadingCount = ref(0)\r\nconst totalUploadCount = ref(0)\r\nconst uploadProgress = ref(0)\r\nconst errors = ref([])\r\nconst selectedImage = ref(null)\r\n\r\n// Watch for external changes\r\nwatch(() => props.modelValue, (newValue) => {\r\n  images.value = [...newValue]\r\n}, { deep: true })\r\n\r\n// Emit changes\r\nwatch(images, (newImages) => {\r\n  emit('update:modelValue', newImages)\r\n}, { deep: true })\r\n\r\n// Methods\r\nconst handleDrop = (e) => {\r\n  e.preventDefault()\r\n  isDragOver.value = false\r\n  \r\n  if (props.disabled) return\r\n  \r\n  const files = Array.from(e.dataTransfer.files)\r\n  processFiles(files)\r\n}\r\n\r\nconst handleDragLeave = (e) => {\r\n  if (!e.currentTarget.contains(e.relatedTarget)) {\r\n    isDragOver.value = false\r\n  }\r\n}\r\n\r\nconst handleFileSelect = (e) => {\r\n  const files = Array.from(e.target.files)\r\n  processFiles(files)\r\n  e.target.value = '' // Reset input\r\n}\r\n\r\nconst processFiles = async (files) => {\r\n  errors.value = []\r\n  \r\n  // Filter valid files\r\n  const validFiles = files.filter(file => {\r\n    if (!file.type.startsWith('image/')) {\r\n      errors.value.push(`${file.name} is not a valid image file`)\r\n      return false\r\n    }\r\n    \r\n    if (file.size > props.maxSizeMB * 1024 * 1024) {\r\n      errors.value.push(`${file.name} is too large (max ${props.maxSizeMB}MB)`)\r\n      return false\r\n    }\r\n    \r\n    return true\r\n  })\r\n\r\n  if (images.value.length + validFiles.length > props.maxImages) {\r\n    errors.value.push(`Cannot upload more than ${props.maxImages} images`)\r\n    return\r\n  }\r\n\r\n  if (validFiles.length === 0) return\r\n\r\n  // Start upload process\r\n  uploading.value = true\r\n  uploadingCount.value = 0\r\n  totalUploadCount.value = validFiles.length\r\n  uploadProgress.value = 0\r\n\r\n  try {\r\n    for (const file of validFiles) {\r\n      await uploadSingleFile(file)\r\n      uploadingCount.value++\r\n      uploadProgress.value = (uploadingCount.value / totalUploadCount.value) * 100\r\n    }\r\n    \r\n    notifications.success(`Successfully uploaded ${validFiles.length} image(s)`)\r\n    emit('upload-complete', images.value)\r\n  } catch (error) {\r\n    console.error('Upload error:', error)\r\n    notifications.error('Failed to upload some images')\r\n    emit('upload-error', error)\r\n  } finally {\r\n    uploading.value = false\r\n    uploadingCount.value = 0\r\n    totalUploadCount.value = 0\r\n    uploadProgress.value = 0\r\n  }\r\n}\r\n\r\nconst uploadSingleFile = async (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    \r\n    reader.onload = (e) => {\r\n      const imageData = {\r\n        id: Date.now() + Math.random(),\r\n        file,\r\n        preview: e.target.result,\r\n        url: e.target.result, // In real app, this would be the server URL\r\n        alt: '',\r\n        caption: '',\r\n        isPrimary: images.value.length === 0, // First image is primary by default\r\n        size: file.size,\r\n        type: file.type,\r\n        name: file.name\r\n      }\r\n      \r\n      images.value.push(imageData)\r\n      resolve(imageData)\r\n    }\r\n    \r\n    reader.onerror = reject\r\n    reader.readAsDataURL(file)\r\n  })\r\n}\r\n\r\nconst removeImage = (index) => {\r\n  const removedImage = images.value[index]\r\n  images.value.splice(index, 1)\r\n  \r\n  // If removed image was primary, make first image primary\r\n  if (removedImage.isPrimary && images.value.length > 0) {\r\n    images.value[0].isPrimary = true\r\n  }\r\n}\r\n\r\nconst setAsPrimary = (index) => {\r\n  // Remove primary from all images\r\n  images.value.forEach(img => img.isPrimary = false)\r\n  // Set selected as primary\r\n  images.value[index].isPrimary = true\r\n}\r\n\r\nconst handleImageError = (image) => {\r\n  console.error('Image failed to load:', image)\r\n  notifications.error(`Failed to load image: ${image.name}`)\r\n}\r\n\r\nconst updateImageDetails = () => {\r\n  // Emit change event when image details are updated\r\n  emit('update:modelValue', images.value)\r\n}\r\n\r\n// Select image for editing details\r\nconst selectImage = (image) => {\r\n  selectedImage.value = image\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.image-uploader .input {\r\n  @apply w-full rounded border border-gray-300 px-3 py-2 text-sm;\r\n}\r\n</style>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA,UAAM,QAAQ;AA2Bd,UAAM,OAAO;AAES,0BAAuB;AAG7C,UAAM,SAAS,IAAI,CAAC,GAAG,MAAM,UAAU,CAAC;AACxC,UAAM,aAAa,IAAI,KAAK;AAC5B,UAAM,YAAY,IAAI,KAAK;AAC3B,UAAM,iBAAiB,IAAI,CAAC;AAC5B,UAAM,mBAAmB,IAAI,CAAC;AAC9B,UAAM,iBAAiB,IAAI,CAAC;AAC5B,UAAM,SAAS,IAAI,EAAE;AACrB,UAAM,gBAAgB,IAAI,IAAI;AAG9B,UAAM,MAAM,MAAM,YAAY,CAAC,aAAa;AAC1C,aAAO,QAAQ,CAAC,GAAG,QAAQ;AAAA,IAC7B,GAAG,EAAE,MAAM,MAAM;AAGjB,UAAM,QAAQ,CAAC,cAAc;AAC3B,WAAK,qBAAqB,SAAS;AAAA,IACrC,GAAG,EAAE,MAAM,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}