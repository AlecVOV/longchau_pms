{"file":"config-Dy4W0jDo.js","mappings":";;;;;AAIA,MAAM,eAAe;AAAA,EACnB,QAAQ,CAAA;AACV;AAWA,MAAA,qCAAoC,YAAY;ACiBzC,SAAS,eAAe;AAC7B,QAAM,UAAU,WAAW;AAC3B,UAAQ,eAAR,QAAQ,aAAoC,MAAM,WAAW;AAC7D,SAAO,QAAQ;AACjB;","names":[],"sources":["../../../../virtual:nuxt:C%3A%2FUsers%2FAdmin%2FDesktop%2Fproject-bolt-sb1-m6lavhab%2Fproject%2F.nuxt%2Fapp.config.mjs","../../../../node_modules/nuxt/dist/app/config.js"],"sourcesContent":["\nimport { _replaceAppConfig } from '#app/config'\nimport { defuFn } from 'defu'\n\nconst inlineConfig = {\n  \"nuxt\": {}\n}\n\n// Vite - webpack is handled directly in #app/config\nif (import.meta.hot) {\n  import.meta.hot.accept((newModule) => {\n    _replaceAppConfig(newModule.default)\n  })\n}\n\n\n\nexport default /*@__PURE__*/ defuFn(inlineConfig)\n","import { reactive } from \"vue\";\nimport { klona } from \"klona\";\nimport { useNuxtApp } from \"./nuxt.js\";\nimport __appConfig from \"#build/app.config.mjs\";\nexport const _getAppConfig = () => __appConfig;\nfunction isPojoOrArray(val) {\n  return Array.isArray(val) || !!val && typeof val === \"object\" && val.constructor?.name === \"Object\";\n}\nfunction deepDelete(obj, newObj) {\n  for (const key in obj) {\n    const val = newObj[key];\n    if (!(key in newObj)) {\n      delete obj[key];\n    }\n    if (isPojoOrArray(val)) {\n      deepDelete(obj[key], newObj[key]);\n    }\n  }\n}\nfunction deepAssign(obj, newObj) {\n  for (const key in newObj) {\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const val = newObj[key];\n    if (isPojoOrArray(val)) {\n      const defaultVal = Array.isArray(val) ? [] : {};\n      obj[key] ||= defaultVal;\n      deepAssign(obj[key], val);\n    } else {\n      obj[key] = val;\n    }\n  }\n}\nexport function useAppConfig() {\n  const nuxtApp = useNuxtApp();\n  nuxtApp._appConfig ||= import.meta.server ? klona(__appConfig) : reactive(__appConfig);\n  return nuxtApp._appConfig;\n}\nexport function _replaceAppConfig(newConfig) {\n  const appConfig = useAppConfig();\n  deepAssign(appConfig, newConfig);\n  deepDelete(appConfig, newConfig);\n}\nexport function updateAppConfig(appConfig) {\n  const _appConfig = useAppConfig();\n  deepAssign(_appConfig, appConfig);\n}\nif (import.meta.dev) {\n  if (import.meta.hot) {\n    import.meta.hot.accept((newModule) => {\n      const newConfig = newModule?._getAppConfig();\n      if (newConfig) {\n        _replaceAppConfig(newConfig);\n      }\n    });\n  }\n  if (import.meta.webpackHot) {\n    import.meta.webpackHot.accept(\"#build/app.config.mjs\", () => {\n      _replaceAppConfig(__appConfig);\n    });\n  }\n}\n"],"version":3}