{"file":"ToastNotification-BQ8E8U-W.js","mappings":";;;;;;;;;;;;;;AAyDA,UAAM,QAAQ;AASd,UAAM,eAAe,SAAS,MAAM;AAClC,YAAM,cAAc;AACpB,YAAM,cAAc;AAAA,QAClB,SAAS;AAAA,QACT,OAAO;AAAA,QACP,SAAS;AAAA,QACT,MAAM;AAAA,MACP;AAED,aAAO,CAAC,aAAa,YAAY,MAAM,aAAa,IAAI,KAAK,YAAY,IAAI;AAAA,IAC/E,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../components/ToastNotification.vue"],"sourcesContent":["<template>\r\n  <div class=\"toast-notification\" :class=\"toastClasses\" role=\"alert\" :aria-live=\"notification.type === 'error' ? 'assertive' : 'polite'\">\r\n    <!-- Icon -->\r\n    <div class=\"toast-icon\">\r\n      <div v-if=\"notification.showSpinner\" class=\"animate-spin w-5 h-5 border-2 border-current border-t-transparent rounded-full\"></div>\r\n      <svg v-else-if=\"notification.type === 'success'\" class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\r\n      </svg>\r\n      <svg v-else-if=\"notification.type === 'error'\" class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\r\n      </svg>\r\n      <svg v-else-if=\"notification.type === 'warning'\" class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\r\n      </svg>\r\n      <svg v-else class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\r\n      </svg>\r\n    </div>\r\n\r\n    <!-- Content -->\r\n    <div class=\"toast-content\">\r\n      <div v-if=\"notification.title\" class=\"toast-title\">\r\n        {{ notification.title }}\r\n      </div>\r\n      <div class=\"toast-message\">\r\n        {{ notification.message }}\r\n      </div>\r\n      \r\n      <!-- Action buttons -->\r\n      <div v-if=\"notification.actions && notification.actions.length\" class=\"toast-actions\">\r\n        <button\r\n          v-for=\"action in notification.actions\"\r\n          :key=\"action.label\"\r\n          @click=\"handleAction(action)\"\r\n          :class=\"action.class || 'btn-ghost'\"\r\n          class=\"toast-action-btn\"\r\n        >\r\n          {{ action.label }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Close button -->\r\n    <button\r\n      v-if=\"!notification.showSpinner\"\r\n      @click=\"$emit('close')\"\r\n      class=\"toast-close\"\r\n      aria-label=\"Close notification\"\r\n    >\r\n      <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n      </svg>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nconst props = defineProps({\r\n  notification: {\r\n    type: Object,\r\n    required: true\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['close'])\r\n\r\nconst toastClasses = computed(() => {\r\n  const baseClasses = 'toast-notification-base'\r\n  const typeClasses = {\r\n    success: 'toast-success',\r\n    error: 'toast-error',\r\n    warning: 'toast-warning',\r\n    info: 'toast-info'\r\n  }\r\n  \r\n  return [baseClasses, typeClasses[props.notification.type] || typeClasses.info]\r\n})\r\n\r\nconst handleAction = (action) => {\r\n  if (action.handler) {\r\n    action.handler()\r\n  }\r\n  \r\n  if (action.close !== false) {\r\n    emit('close')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.toast-notification-base {\r\n  @apply flex items-start p-4 mb-3 rounded-lg shadow-lg border backdrop-blur-sm;\r\n  @apply transform transition-all duration-300 ease-in-out;\r\n  @apply animate-slide-in-right;\r\n  max-width: 400px;\r\n  min-width: 300px;\r\n}\r\n\r\n.toast-success {\r\n  @apply bg-green-50 border-green-200 text-green-800;\r\n}\r\n\r\n.toast-error {\r\n  @apply bg-red-50 border-red-200 text-red-800;\r\n}\r\n\r\n.toast-warning {\r\n  @apply bg-yellow-50 border-yellow-200 text-yellow-800;\r\n}\r\n\r\n.toast-info {\r\n  @apply bg-blue-50 border-blue-200 text-blue-800;\r\n}\r\n\r\n.toast-icon {\r\n  @apply flex-shrink-0 mr-3;\r\n}\r\n\r\n.toast-content {\r\n  @apply flex-1 min-w-0;\r\n}\r\n\r\n.toast-title {\r\n  @apply text-sm font-semibold mb-1;\r\n}\r\n\r\n.toast-message {\r\n  @apply text-sm break-words;\r\n}\r\n\r\n.toast-actions {\r\n  @apply flex space-x-2 mt-3;\r\n}\r\n\r\n.toast-action-btn {\r\n  @apply px-3 py-1 text-xs font-medium rounded;\r\n}\r\n\r\n.toast-close {\r\n  @apply flex-shrink-0 ml-3 p-1 rounded-md hover:bg-black hover:bg-opacity-10 transition-colors;\r\n}\r\n\r\n@keyframes slide-in-right {\r\n  from {\r\n    transform: translateX(100%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.animate-slide-in-right {\r\n  animation: slide-in-right 0.3s ease-out;\r\n}\r\n</style>\r\n"],"version":3}