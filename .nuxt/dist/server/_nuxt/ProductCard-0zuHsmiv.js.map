{"version":3,"file":"ProductCard-0zuHsmiv.js","sources":["../../../../components/ProductCard.vue"],"sourcesContent":["<template>\n  <div class=\"card group relative animate-fade-in\">\n    <!-- Badges -->\n    <div class=\"absolute top-2 left-2 z-10 flex flex-col gap-1\">\n      <span v-if=\"product.discount > 0\" class=\"bg-accent-500 text-white text-xs font-medium px-2 py-1 rounded\">\n        {{ product.discount }}% OFF\n      </span>\n      <span v-if=\"product.isRx\" class=\"bg-primary-600 text-white text-xs font-medium px-2 py-1 rounded\">\n        Prescription\n      </span>\n    </div>\n    \n    <!-- Quick view button -->\n    <div class=\"absolute top-2 right-2 z-10 opacity-0 group-hover:opacity-100 transition-opacity\">\n      <button @click.prevent=\"$emit('quick-view', product)\" \n              class=\"bg-white/80 backdrop-blur-sm rounded-full p-2 hover:bg-white text-neutral-700 hover:text-primary-600 transition-colors\"\n              title=\"Quick view\">\n        <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n        </svg>\n      </button>\n    </div>\n    \n    <!-- Product Image -->\n    <NuxtLink :to=\"`/product/${product.slug}`\">\n      <div class=\"aspect-square overflow-hidden\">\n        <img :src=\"getProductImage(product)\" \n             :alt=\"product.name\" \n             class=\"w-full h-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-105\">\n      </div>\n    </NuxtLink>\n    \n    <!-- Product Info -->\n    <div class=\"p-4\">\n      <!-- Category -->\n      <p class=\"text-xs text-neutral-500 mb-1\">{{ product.category?.name || product.category }}</p>\n      \n      <!-- Product Name -->\n      <NuxtLink :to=\"`/product/${product.slug}`\">\n        <h3 class=\"font-medium text-neutral-800 hover:text-primary-600 transition-colors line-clamp-2 mb-2\">\n          {{ product.name }}\n        </h3>\n      </NuxtLink>\n      \n      <!-- Rating -->\n      <div class=\"flex items-center mb-3\">\n        <div class=\"flex text-warning-500\">\n          <svg v-for=\"n in 5\" :key=\"n\" \n               :class=\"[n <= Math.floor(product.rating) ? 'text-yellow-400' : 'text-gray-300']\"\n               class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n          </svg>\n        </div>\n        <span class=\"text-xs text-neutral-500 ml-1\">({{ product.reviews }})</span>\n      </div>\n      \n      <!-- Price -->\n      <div class=\"flex items-center justify-between mb-3\">\n        <div>\n          <span v-if=\"product.discount > 0\" class=\"text-neutral-500 text-sm line-through mr-2\">\n            ${{ (product.price * (1 + product.discount / 100)).toFixed(2) }}\n          </span>\n          <span class=\"font-semibold text-neutral-900\">${{ product.price.toFixed(2) }}</span>\n        </div>\n        <span v-if=\"product.stock === 0\" class=\"text-xs text-accent-600 font-medium\">Out of Stock</span>\n        <span v-else-if=\"product.requiresPrescription\" class=\"text-xs text-primary-600 font-medium\">Rx Required</span>\n      </div>\n      \n      <!-- Actions -->\n      <div class=\"flex gap-2\">\n        <template v-if=\"product.requiresPrescription\">\n          <NuxtLink :to=\"`/product/${product.slug}`\" class=\"btn-primary py-1.5 flex-grow text-center text-sm\">\n            View Details\n          </NuxtLink>\n        </template>\n        <template v-else-if=\"product.stock > 0\">\n          <button @click=\"$emit('add-to-cart', product)\" \n                  class=\"btn-primary py-1.5 flex-grow text-sm\">\n            Add to Cart\n          </button>\n        </template>\n        <template v-else>\n          <button disabled class=\"btn-primary py-1.5 flex-grow text-sm opacity-50 cursor-not-allowed\">\n            Out of Stock\n          </button>\n        </template>\n        <button @click=\"handleWishlistClick\" \n                class=\"btn-ghost py-1.5 px-3 text-sm transition-all duration-300 hover:scale-110\"\n                :class=\"{ 'text-red-500': wishlistClicked }\">\n          <!-- Outlined heart when not clicked -->\n          <svg v-if=\"!wishlistClicked\" class=\"w-5 h-5 transition-all duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n          </svg>\n          <!-- Filled heart when clicked -->\n          <svg v-else class=\"w-5 h-5 transition-all duration-300 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n          </svg>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nconst props = defineProps({\n  product: {\n    type: Object,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['add-to-cart', 'add-to-wishlist', 'quick-view'])\n\n// Wishlist animation state\nconst wishlistClicked = ref(false)\n\n// Handle wishlist click with visual feedback\nconst handleWishlistClick = () => {\n  wishlistClicked.value = true\n  emit('add-to-wishlist', props.product)\n  \n  // No timeout - keep the heart filled permanently\n}\n\n// Helper function to get the correct product image\nconst getProductImage = (product) => {\n  if (product.images) {\n    // If images is an array, return the first image\n    if (Array.isArray(product.images) && product.images.length > 0) {\n      return product.images[0]\n    }\n    // If images is a string (JSON), try to parse it\n    if (typeof product.images === 'string') {\n      try {\n        const parsedImages = JSON.parse(product.images)\n        if (Array.isArray(parsedImages) && parsedImages.length > 0) {\n          return parsedImages[0]\n        }\n      } catch {\n        // If parsing fails, return the string as is\n        return product.images\n      }\n    }\n  }\n  // Fallback to image field or placeholder\n  return product.image || '/placeholder-product.jpg'\n}\n</script>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAmHA,UAAM,kBAAkB,IAAI,KAAK;AAWjC,UAAM,kBAAkB,CAAC,YAAY;AACnC,UAAI,QAAQ,QAAQ;AAElB,YAAI,MAAM,QAAQ,QAAQ,MAAM,KAAK,QAAQ,OAAO,SAAS,GAAG;AAC9D,iBAAO,QAAQ,OAAO,CAAC;AAAA,QAC7B;AAEI,YAAI,OAAO,QAAQ,WAAW,UAAU;AACtC,cAAI;AACF,kBAAM,eAAe,KAAK,MAAM,QAAQ,MAAM;AAC9C,gBAAI,MAAM,QAAQ,YAAY,KAAK,aAAa,SAAS,GAAG;AAC1D,qBAAO,aAAa,CAAC;AAAA,YAC/B;AAAA,UACA,QAAc;AAEN,mBAAO,QAAQ;AAAA,UACvB;AAAA,QACA;AAAA,MACA;AAEE,aAAO,QAAQ,SAAS;AAAA,IAC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}