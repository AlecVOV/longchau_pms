{"version":3,"file":"inventory-xzncvWKV.js","sources":["../../../../pages/admin/inventory.vue"],"sourcesContent":["<template>\r\n  <div class=\"py-8\">\r\n    <div class=\"container mx-auto px-4\">\r\n      <!-- Header -->\r\n      <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-8\">\r\n        <div>\r\n          <h1 class=\"text-3xl font-bold text-gray-900\">Inventory Management</h1>\r\n          <p class=\"text-gray-600 mt-2\">Monitor and manage product stock levels</p>\r\n        </div>\r\n        <div class=\"mt-4 sm:mt-0 flex space-x-4\">\r\n          <button\r\n            @click=\"showBulkUpdateModal = true\"\r\n            class=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors font-medium\"\r\n          >\r\n            Bulk Update\r\n          </button>\r\n          <button\r\n            @click=\"exportInventory\"\r\n            class=\"border border-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-50 transition-colors font-medium\"\r\n          >\r\n            Export CSV\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Inventory Overview Cards -->\r\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n        <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div class=\"flex items-center\">\r\n            <div class=\"p-2 bg-blue-100 rounded-lg\">\r\n              <svg class=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"ml-4\">\r\n              <p class=\"text-sm font-medium text-gray-600\">Total Value</p>\r\n              <p class=\"text-2xl font-bold text-gray-900\">${{ totalInventoryValue.toFixed(2) }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div class=\"flex items-center\">\r\n            <div class=\"p-2 bg-green-100 rounded-lg\">\r\n              <svg class=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"ml-4\">\r\n              <p class=\"text-sm font-medium text-gray-600\">Well Stocked</p>\r\n              <p class=\"text-2xl font-bold text-gray-900\">{{ wellStockedCount }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div class=\"flex items-center\">\r\n            <div class=\"p-2 bg-yellow-100 rounded-lg\">\r\n              <svg class=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"ml-4\">\r\n              <p class=\"text-sm font-medium text-gray-600\">Low Stock Alerts</p>\r\n              <p class=\"text-2xl font-bold text-gray-900\">{{ lowStockCount }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div class=\"flex items-center\">\r\n            <div class=\"p-2 bg-red-100 rounded-lg\">\r\n              <svg class=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"ml-4\">\r\n              <p class=\"text-sm font-medium text-gray-600\">Out of Stock</p>\r\n              <p class=\"text-2xl font-bold text-gray-900\">{{ outOfStockCount }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Quick Actions -->\r\n      <div class=\"bg-white rounded-lg shadow-sm border p-6 mb-8\">\r\n        <h2 class=\"text-lg font-semibold text-gray-900 mb-4\">Quick Actions</h2>\r\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <button\r\n            @click=\"showLowStockProducts\"\r\n            class=\"flex items-center p-4 border border-yellow-300 rounded-lg hover:bg-yellow-50 transition-colors\"\r\n          >\r\n            <div class=\"p-2 bg-yellow-100 rounded-lg mr-3\">\r\n              <svg class=\"w-5 h-5 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"text-left\">\r\n              <div class=\"font-medium text-gray-900\">Review Low Stock</div>\r\n              <div class=\"text-sm text-gray-500\">{{ lowStockCount }} items need attention</div>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            @click=\"showOutOfStockProducts\"\r\n            class=\"flex items-center p-4 border border-red-300 rounded-lg hover:bg-red-50 transition-colors\"\r\n          >\r\n            <div class=\"p-2 bg-red-100 rounded-lg mr-3\">\r\n              <svg class=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"text-left\">\r\n              <div class=\"font-medium text-gray-900\">Restock Items</div>\r\n              <div class=\"text-sm text-gray-500\">{{ outOfStockCount }} items out of stock</div>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            @click=\"generateReorder\"\r\n            class=\"flex items-center p-4 border border-blue-300 rounded-lg hover:bg-blue-50 transition-colors\"\r\n          >\r\n            <div class=\"p-2 bg-blue-100 rounded-lg mr-3\">\r\n              <svg class=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"text-left\">\r\n              <div class=\"font-medium text-gray-900\">Generate Reorder List</div>\r\n              <div class=\"text-sm text-gray-500\">Create purchase orders</div>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Inventory Table -->\r\n      <div class=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\r\n        <!-- Table Filters -->\r\n        <div class=\"p-6 border-b border-gray-200\">\r\n          <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            <div>\r\n              <label class=\"block text-sm font-medium text-gray-700 mb-2\">Search Products</label>\r\n              <input\r\n                v-model=\"searchQuery\"\r\n                type=\"text\"\r\n                placeholder=\"Search by name or SKU\"\r\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              >\r\n            </div>\r\n            <div>\r\n              <label class=\"block text-sm font-medium text-gray-700 mb-2\">Category</label>\r\n              <select\r\n                v-model=\"selectedCategory\"\r\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              >\r\n                <option value=\"\">All Categories</option>\r\n                <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\r\n                  {{ category.name }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label class=\"block text-sm font-medium text-gray-700 mb-2\">Stock Status</label>\r\n              <select\r\n                v-model=\"stockFilter\"\r\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              >\r\n                <option value=\"\">All Products</option>\r\n                <option value=\"well-stocked\">Well Stocked (>{{ stockThresholds.well }})</option>\r\n                <option value=\"low-stock\">Low Stock (1-{{ stockThresholds.low }})</option>\r\n                <option value=\"out-of-stock\">Out of Stock (0)</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"flex items-end\">\r\n              <button\r\n                @click=\"clearFilters\"\r\n                class=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\r\n              >\r\n                Clear Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Table -->\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"min-w-full divide-y divide-gray-200\">\r\n            <thead class=\"bg-gray-50\">\r\n              <tr>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  <input\r\n                    v-model=\"selectAll\"\r\n                    type=\"checkbox\"\r\n                    class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                    @change=\"toggleSelectAll\"\r\n                  >\r\n                </th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Product\r\n                </th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Current Stock\r\n                </th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Status\r\n                </th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Unit Price\r\n                </th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Stock Value\r\n                </th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Last Updated\r\n                </th>\r\n                <th class=\"relative px-6 py-3\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"bg-white divide-y divide-gray-200\">\r\n              <tr v-for=\"product in filteredProducts\" :key=\"product.id\" class=\"hover:bg-gray-50\">\r\n                <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                  <input\r\n                    v-model=\"selectedProducts\"\r\n                    :value=\"product.id\"\r\n                    type=\"checkbox\"\r\n                    class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                  >\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div class=\"flex items-center\">\r\n                    <div class=\"flex-shrink-0 h-10 w-10\">\r\n                      <img\r\n                        :src=\"product.image || '/placeholder-product.jpg'\"\r\n                        :alt=\"product.name\"\r\n                        class=\"h-10 w-10 rounded-lg object-cover\"\r\n                      >\r\n                    </div>\r\n                    <div class=\"ml-4\">\r\n                      <div class=\"text-sm font-medium text-gray-900\">{{ product.name }}</div>\r\n                      <div class=\"text-sm text-gray-500\">SKU: {{ product.sku }}</div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div class=\"flex items-center space-x-2\">\r\n                    <input\r\n                      :value=\"product.stock\"\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      class=\"w-20 px-2 py-1 text-sm border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      @change=\"updateProductStock(product, $event.target.value)\"\r\n                    >\r\n                    <span class=\"text-sm text-gray-500\">units</span>\r\n                  </div>\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                  <span\r\n                    :class=\"getStockStatusColor(product.stock)\"\r\n                    class=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full\"\r\n                  >\r\n                    {{ getStockStatusText(product.stock) }}\r\n                  </span>\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                  ${{ product.price.toFixed(2) }}\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                  ${{ (product.stock * product.price).toFixed(2) }}\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {{ formatDate(product.lastUpdated) }}\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                  <div class=\"flex space-x-2\">\r\n                    <button\r\n                      @click=\"showStockHistory(product)\"\r\n                      class=\"text-blue-600 hover:text-blue-900\"\r\n                      title=\"View History\"\r\n                    >\r\n                      <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                    </button>\r\n                    <button\r\n                      @click=\"quickRestock(product)\"\r\n                      class=\"text-green-600 hover:text-green-900\"\r\n                      title=\"Quick Restock\"\r\n                    >\r\n                      <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <!-- Pagination -->\r\n        <div class=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\r\n          <div class=\"flex-1 flex justify-between sm:hidden\">\r\n            <button\r\n              @click=\"previousPage\"\r\n              :disabled=\"!pagination.hasPrev\"\r\n              class=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              Previous\r\n            </button>\r\n            <button\r\n              @click=\"nextPage\"\r\n              :disabled=\"!pagination.hasNext\"\r\n              class=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n          <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n            <div>\r\n              <p class=\"text-sm text-gray-700\">\r\n                Showing {{ ((pagination.currentPage - 1) * pagination.itemsPerPage) + 1 }} to {{ Math.min(pagination.currentPage * pagination.itemsPerPage, filteredProducts.length) }} of {{ filteredProducts.length }} results\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <nav class=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\r\n                <button\r\n                  @click=\"previousPage\"\r\n                  :disabled=\"!pagination.hasPrev\"\r\n                  class=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button\r\n                  @click=\"nextPage\"\r\n                  :disabled=\"!pagination.hasNext\"\r\n                  class=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Bulk Update Modal -->\r\n    <div v-if=\"showBulkUpdateModal\" class=\"fixed inset-0 z-50 overflow-y-auto\">\r\n      <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n          <div class=\"absolute inset-0 bg-gray-500 opacity-75\" @click=\"showBulkUpdateModal = false\"></div>\r\n        </div>\r\n\r\n        <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n          <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n            <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\r\n              Bulk Stock Update\r\n            </h3>\r\n            <div class=\"space-y-4\">\r\n              <div>\r\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Selected Products: {{ selectedProducts.length }}\r\n                </label>\r\n                <p class=\"text-sm text-gray-500\">\r\n                  Update stock levels for all selected products\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Operation</label>\r\n                <select\r\n                  v-model=\"bulkOperation\"\r\n                  class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                >\r\n                  <option value=\"set\">Set Stock Level</option>\r\n                  <option value=\"add\">Add to Current Stock</option>\r\n                  <option value=\"subtract\">Subtract from Current Stock</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {{ bulkOperation === 'set' ? 'New Stock Level' : 'Quantity' }}\r\n                </label>\r\n                <input\r\n                  v-model.number=\"bulkQuantity\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n            <button\r\n              @click=\"executeBulkUpdate\"\r\n              :disabled=\"selectedProducts.length === 0\"\r\n              class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm disabled:opacity-50\"\r\n            >\r\n              Update {{ selectedProducts.length }} Products\r\n            </button>\r\n            <button\r\n              @click=\"showBulkUpdateModal = false\"\r\n              class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useProductsStore } from '~/stores/products'\r\n\r\ndefinePageMeta({\r\n  middleware: 'admin'\r\n})\r\n\r\nconst productsStore = useProductsStore()\r\n\r\n// Reactive data\r\nconst searchQuery = ref('')\r\nconst selectedCategory = ref('')\r\nconst stockFilter = ref('')\r\nconst selectedProducts = ref([])\r\nconst selectAll = ref(false)\r\nconst showBulkUpdateModal = ref(false)\r\nconst bulkOperation = ref('set')\r\nconst bulkQuantity = ref(0)\r\n\r\n// Constants\r\nconst stockThresholds = {\r\n  well: 20,\r\n  low: 10\r\n}\r\n\r\n// Computed properties\r\nconst products = computed(() => productsStore.products)\r\nconst categories = computed(() => productsStore.categories)\r\nconst pagination = computed(() => productsStore.pagination)\r\n\r\nconst filteredProducts = computed(() => {\r\n  let filtered = [...products.value]\r\n\r\n  // Search filter\r\n  if (searchQuery.value) {\r\n    const query = searchQuery.value.toLowerCase()\r\n    filtered = filtered.filter(product =>\r\n      product.name.toLowerCase().includes(query) ||\r\n      product.sku.toLowerCase().includes(query)\r\n    )\r\n  }\r\n\r\n  // Category filter\r\n  if (selectedCategory.value) {\r\n    filtered = filtered.filter(product => \r\n      product.categoryId === parseInt(selectedCategory.value)\r\n    )\r\n  }\r\n\r\n  // Stock filter\r\n  if (stockFilter.value) {\r\n    switch (stockFilter.value) {\r\n      case 'well-stocked':\r\n        filtered = filtered.filter(p => p.stock > stockThresholds.well)\r\n        break\r\n      case 'low-stock':\r\n        filtered = filtered.filter(p => p.stock > 0 && p.stock <= stockThresholds.low)\r\n        break\r\n      case 'out-of-stock':\r\n        filtered = filtered.filter(p => p.stock === 0)\r\n        break\r\n    }\r\n  }\r\n\r\n  return filtered\r\n})\r\n\r\nconst totalInventoryValue = computed(() => {\r\n  return products.value.reduce((total, product) => {\r\n    return total + (product.stock * product.price)\r\n  }, 0)\r\n})\r\n\r\nconst wellStockedCount = computed(() => \r\n  products.value.filter(p => p.stock > stockThresholds.well).length\r\n)\r\n\r\nconst lowStockCount = computed(() => \r\n  products.value.filter(p => p.stock > 0 && p.stock <= stockThresholds.low).length\r\n)\r\n\r\nconst outOfStockCount = computed(() => \r\n  products.value.filter(p => p.stock === 0).length\r\n)\r\n\r\n// Methods\r\nconst getStockStatusText = (stock) => {\r\n  if (stock === 0) return 'Out of Stock'\r\n  if (stock <= stockThresholds.low) return 'Low Stock'\r\n  return 'In Stock'\r\n}\r\n\r\nconst getStockStatusColor = (stock) => {\r\n  if (stock === 0) return 'bg-red-100 text-red-800'\r\n  if (stock <= stockThresholds.low) return 'bg-yellow-100 text-yellow-800'\r\n  return 'bg-green-100 text-green-800'\r\n}\r\n\r\nconst formatDate = (date) => {\r\n  return new Date().toLocaleDateString()\r\n}\r\n\r\nconst updateProductStock = async (product, newStock) => {\r\n  try {\r\n    await productsStore.setStock(product.id, parseInt(newStock))\r\n    // Success feedback could be added here\r\n  } catch (error) {\r\n    console.error('Failed to update stock:', error)\r\n    // Error feedback could be added here\r\n  }\r\n}\r\n\r\nconst toggleSelectAll = () => {\r\n  if (selectAll.value) {\r\n    selectedProducts.value = filteredProducts.value.map(p => p.id)\r\n  } else {\r\n    selectedProducts.value = []\r\n  }\r\n}\r\n\r\nconst executeBulkUpdate = async () => {\r\n  if (selectedProducts.value.length === 0) return\r\n\r\n  try {\r\n    const updates = selectedProducts.value.map(productId => ({\r\n      productId,\r\n      stock: bulkQuantity.value,\r\n      operation: bulkOperation.value\r\n    }))\r\n\r\n    await productsStore.bulkUpdateStock(updates)\r\n    showBulkUpdateModal.value = false\r\n    selectedProducts.value = []\r\n    selectAll.value = false\r\n    // Success feedback could be added here\r\n  } catch (error) {\r\n    console.error('Failed to bulk update stock:', error)\r\n    // Error feedback could be added here\r\n  }\r\n}\r\n\r\nconst clearFilters = () => {\r\n  searchQuery.value = ''\r\n  selectedCategory.value = ''\r\n  stockFilter.value = ''\r\n}\r\n\r\nconst showLowStockProducts = () => {\r\n  stockFilter.value = 'low-stock'\r\n}\r\n\r\nconst showOutOfStockProducts = () => {\r\n  stockFilter.value = 'out-of-stock'\r\n}\r\n\r\nconst exportInventory = () => {\r\n  // Generate CSV export\r\n  const csvContent = generateInventoryCSV()\r\n  const blob = new Blob([csvContent], { type: 'text/csv' })\r\n  const url = window.URL.createObjectURL(blob)\r\n  const a = document.createElement('a')\r\n  a.href = url\r\n  a.download = `inventory-${new Date().toISOString().split('T')[0]}.csv`\r\n  a.click()\r\n  window.URL.revokeObjectURL(url)\r\n}\r\n\r\nconst generateInventoryCSV = () => {\r\n  const headers = ['Product Name', 'SKU', 'Category', 'Current Stock', 'Unit Price', 'Stock Value', 'Status']\r\n  const rows = filteredProducts.value.map(product => [\r\n    product.name,\r\n    product.sku,\r\n    product.category?.name || 'N/A',\r\n    product.stock,\r\n    product.price.toFixed(2),\r\n    (product.stock * product.price).toFixed(2),\r\n    getStockStatusText(product.stock)\r\n  ])\r\n\r\n  return [headers, ...rows].map(row => row.join(',')).join('\\n')\r\n}\r\n\r\nconst generateReorder = () => {\r\n  // Generate reorder list for low stock and out of stock items\r\n  const reorderItems = products.value.filter(p => p.stock <= stockThresholds.low)\r\n  console.log('Reorder list generated:', reorderItems)\r\n  // In a real app, this would open a reorder modal or navigate to a purchase order page\r\n}\r\n\r\nconst showStockHistory = (product) => {\r\n  // Show stock movement history\r\n  console.log('Show stock history for:', product.name)\r\n  // In a real app, this would open a modal with stock history\r\n}\r\n\r\nconst quickRestock = (product) => {\r\n  // Quick restock dialog\r\n  const quantity = prompt(`Enter quantity to add to ${product.name} (current: ${product.stock}):`)\r\n  if (quantity && !isNaN(quantity)) {\r\n    updateProductStock(product, product.stock + parseInt(quantity))\r\n  }\r\n}\r\n\r\nconst previousPage = () => {\r\n  if (pagination.value.hasPrev) {\r\n    productsStore.setCurrentPage(pagination.value.currentPage - 1)\r\n    productsStore.fetchProducts()\r\n  }\r\n}\r\n\r\nconst nextPage = () => {\r\n  if (pagination.value.hasNext) {\r\n    productsStore.setCurrentPage(pagination.value.currentPage + 1)\r\n    productsStore.fetchProducts()\r\n  }\r\n}\r\n\r\n// Load data on mount\r\nonMounted(async () => {\r\n  await Promise.all([\r\n    productsStore.fetchProducts(),\r\n    productsStore.fetchCategories()\r\n  ])\r\n})\r\n</script>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmaA,UAAM,gBAAgB,iBAAiB;AAGjC,UAAA,cAAc,IAAI,EAAE;AACpB,UAAA,mBAAmB,IAAI,EAAE;AACzB,UAAA,cAAc,IAAI,EAAE;AACpB,UAAA,mBAAmB,IAAI,EAAE;AACzB,UAAA,YAAY,IAAI,KAAK;AACrB,UAAA,sBAAsB,IAAI,KAAK;AAC/B,UAAA,gBAAgB,IAAI,KAAK;AACzB,UAAA,eAAe,IAAI,CAAC;AAG1B,UAAM,kBAAkB;AAAA,MACtB,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AAGA,UAAM,WAAW,SAAS,MAAM,cAAc,QAAQ;AACtD,UAAM,aAAa,SAAS,MAAM,cAAc,UAAU;AAC1D,UAAM,aAAa,SAAS,MAAM,cAAc,UAAU;AAEpD,UAAA,mBAAmB,SAAS,MAAM;AACtC,UAAI,WAAW,CAAC,GAAG,SAAS,KAAK;AAGjC,UAAI,YAAY,OAAO;AACf,cAAA,QAAQ,YAAY,MAAM,YAAY;AAC5C,mBAAW,SAAS;AAAA,UAAO,CACzB,YAAA,QAAQ,KAAK,YAAc,EAAA,SAAS,KAAK,KACzC,QAAQ,IAAI,YAAY,EAAE,SAAS,KAAK;AAAA,QAC1C;AAAA,MAAA;AAIF,UAAI,iBAAiB,OAAO;AAC1B,mBAAW,SAAS;AAAA,UAAO,CACzB,YAAA,QAAQ,eAAe,SAAS,iBAAiB,KAAK;AAAA,QACxD;AAAA,MAAA;AAIF,UAAI,YAAY,OAAO;AACrB,gBAAQ,YAAY,OAAO;AAAA,UACzB,KAAK;AACH,uBAAW,SAAS,OAAO,CAAA,MAAK,EAAE,QAAQ,gBAAgB,IAAI;AAC9D;AAAA,UACF,KAAK;AACQ,uBAAA,SAAS,OAAO,CAAK,MAAA,EAAE,QAAQ,KAAK,EAAE,SAAS,gBAAgB,GAAG;AAC7E;AAAA,UACF,KAAK;AACH,uBAAW,SAAS,OAAO,CAAK,MAAA,EAAE,UAAU,CAAC;AAC7C;AAAA,QAAA;AAAA,MACJ;AAGK,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,sBAAsB,SAAS,MAAM;AACzC,aAAO,SAAS,MAAM,OAAO,CAAC,OAAO,YAAY;AACxC,eAAA,QAAS,QAAQ,QAAQ,QAAQ;AAAA,SACvC,CAAC;AAAA,IAAA,CACL;AAED,UAAM,mBAAmB;AAAA,MAAS,MAChC,SAAS,MAAM,OAAO,OAAK,EAAE,QAAQ,gBAAgB,IAAI,EAAE;AAAA,IAC7D;AAEA,UAAM,gBAAgB;AAAA,MAAS,MAC7B,SAAS,MAAM,OAAO,CAAK,MAAA,EAAE,QAAQ,KAAK,EAAE,SAAS,gBAAgB,GAAG,EAAE;AAAA,IAC5E;AAEA,UAAM,kBAAkB;AAAA,MAAS,MAC/B,SAAS,MAAM,OAAO,OAAK,EAAE,UAAU,CAAC,EAAE;AAAA,IAC5C;AAGM,UAAA,qBAAqB,CAAC,UAAU;AAChC,UAAA,UAAU,EAAU,QAAA;AACpB,UAAA,SAAS,gBAAgB,IAAY,QAAA;AAClC,aAAA;AAAA,IACT;AAEM,UAAA,sBAAsB,CAAC,UAAU;AACjC,UAAA,UAAU,EAAU,QAAA;AACpB,UAAA,SAAS,gBAAgB,IAAY,QAAA;AAClC,aAAA;AAAA,IACT;AAEM,UAAA,aAAa,CAAC,SAAS;AACpB,cAAA,oBAAI,KAAK,GAAE,mBAAmB;AAAA,IACvC;;;;;;;;;;;;;;;;;;;;;;;;;;"}