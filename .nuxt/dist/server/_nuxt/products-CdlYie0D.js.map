{"version":3,"file":"products-CdlYie0D.js","sources":["../../../../pages/admin/products.vue"],"sourcesContent":["<template>\r\n  <div class=\"py-8\">\r\n    <div class=\"container mx-auto px-4\">\r\n      <!-- Header -->\r\n      <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-8\">\r\n        <div>\r\n          <h1 class=\"text-3xl font-bold text-gray-900\">Product Management</h1>\r\n          <p class=\"text-gray-600 mt-2\">Manage your pharmacy inventory and products</p>\r\n        </div>\r\n        <div class=\"mt-4 sm:mt-0\">\r\n          <button\r\n            @click=\"showAddProductModal = true\"\r\n            class=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors font-medium\"\r\n          >\r\n            Add New Product\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Stats Cards -->\r\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n        <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div class=\"flex items-center\">\r\n            <div class=\"p-2 bg-blue-100 rounded-lg\">\r\n              <svg class=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"ml-4\">\r\n              <p class=\"text-sm font-medium text-gray-600\">Total Products</p>\r\n              <p class=\"text-2xl font-bold text-gray-900\">{{ products.length }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div class=\"flex items-center\">\r\n            <div class=\"p-2 bg-green-100 rounded-lg\">\r\n              <svg class=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"ml-4\">\r\n              <p class=\"text-sm font-medium text-gray-600\">In Stock</p>\r\n              <p class=\"text-2xl font-bold text-gray-900\">{{ inStockCount }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div class=\"flex items-center\">\r\n            <div class=\"p-2 bg-yellow-100 rounded-lg\">\r\n              <svg class=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"ml-4\">\r\n              <p class=\"text-sm font-medium text-gray-600\">Low Stock</p>\r\n              <p class=\"text-2xl font-bold text-gray-900\">{{ lowStockCount }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div class=\"flex items-center\">\r\n            <div class=\"p-2 bg-red-100 rounded-lg\">\r\n              <svg class=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n              </svg>\r\n            </div>\r\n            <div class=\"ml-4\">\r\n              <p class=\"text-sm font-medium text-gray-600\">Out of Stock</p>\r\n              <p class=\"text-2xl font-bold text-gray-900\">{{ outOfStockCount }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Filters and Search -->\r\n      <div class=\"bg-white p-6 rounded-lg shadow-sm border mb-8\">\r\n        <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Search Products</label>\r\n            <input\r\n              v-model=\"searchQuery\"\r\n              type=\"text\"\r\n              placeholder=\"Search by name, brand, or SKU\"\r\n              class=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n          </div>\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Category</label>\r\n            <select\r\n              v-model=\"selectedCategory\"\r\n              class=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n              <option value=\"\">All Categories</option>\r\n              <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\r\n                {{ category.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Stock Status</label>\r\n            <select\r\n              v-model=\"stockFilter\"\r\n              class=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n              <option value=\"\">All Products</option>\r\n              <option value=\"in-stock\">In Stock</option>\r\n              <option value=\"low-stock\">Low Stock</option>\r\n              <option value=\"out-of-stock\">Out of Stock</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"flex items-end\">\r\n            <button\r\n              @click=\"clearFilters\"\r\n              class=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Products Table -->\r\n      <div class=\"bg-white rounded-lg shadow-sm border overflow-hidden\">\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"min-w-full divide-y divide-gray-200\">\r\n            <thead class=\"bg-gray-50\">\r\n              <tr>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Product\r\n                </th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Category\r\n                </th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Price\r\n                </th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Stock\r\n                </th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Status\r\n                </th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"bg-white divide-y divide-gray-200\">\r\n              <tr v-for=\"product in filteredProducts\" :key=\"product.id\" class=\"hover:bg-gray-50\">\r\n                <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div class=\"flex items-center\">\r\n                    <div class=\"flex-shrink-0 h-12 w-12\">\r\n                      <img\r\n                        :src=\"product.image || '/placeholder-product.jpg'\"\r\n                        :alt=\"product.name\"\r\n                        class=\"h-12 w-12 rounded-lg object-cover\"\r\n                      >\r\n                    </div>\r\n                    <div class=\"ml-4\">\r\n                      <div class=\"text-sm font-medium text-gray-900\">{{ product.name }}</div>\r\n                      <div class=\"text-sm text-gray-500\">SKU: {{ product.sku }}</div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div class=\"text-sm text-gray-900\">{{ product.category?.name }}</div>\r\n                  <div class=\"text-sm text-gray-500\">{{ product.brand }}</div>\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div class=\"text-sm font-medium text-gray-900\">${{ product.price.toFixed(2) }}</div>\r\n                  <div v-if=\"product.originalPrice && product.originalPrice > product.price\" class=\"text-sm text-gray-500 line-through\">\r\n                    ${{ product.originalPrice.toFixed(2) }}\r\n                  </div>\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div class=\"flex items-center space-x-2\">\r\n                    <input\r\n                      v-model.number=\"product.stock\"\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      class=\"w-20 px-2 py-1 text-sm border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      @change=\"updateStock(product)\"\r\n                    >\r\n                    <button\r\n                      @click=\"showStockModal(product)\"\r\n                      class=\"text-blue-600 hover:text-blue-800 text-sm\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                  <span\r\n                    :class=\"{\r\n                      'bg-green-100 text-green-800': product.stock > 10,\r\n                      'bg-yellow-100 text-yellow-800': product.stock > 0 && product.stock <= 10,\r\n                      'bg-red-100 text-red-800': product.stock === 0\r\n                    }\"\r\n                    class=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full\"\r\n                  >\r\n                    {{ getStatusText(product.stock) }}\r\n                  </span>\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                  <div class=\"flex space-x-2\">\r\n                    <button\r\n                      @click=\"editProduct(product)\"\r\n                      class=\"text-blue-600 hover:text-blue-900\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      @click=\"deleteProduct(product)\"\r\n                      class=\"text-red-600 hover:text-red-900\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <!-- Pagination -->\r\n        <div class=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\r\n          <div class=\"flex-1 flex justify-between sm:hidden\">\r\n            <button\r\n              @click=\"previousPage\"\r\n              :disabled=\"!pagination.hasPrev\"\r\n              class=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              Previous\r\n            </button>\r\n            <button\r\n              @click=\"nextPage\"\r\n              :disabled=\"!pagination.hasNext\"\r\n              class=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n          <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n            <div>\r\n              <p class=\"text-sm text-gray-700\">\r\n                Showing\r\n                <span class=\"font-medium\">{{ ((pagination.currentPage - 1) * pagination.itemsPerPage) + 1 }}</span>\r\n                to\r\n                <span class=\"font-medium\">{{ Math.min(pagination.currentPage * pagination.itemsPerPage, filteredProducts.length) }}</span>\r\n                of\r\n                <span class=\"font-medium\">{{ filteredProducts.length }}</span>\r\n                results\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <nav class=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\r\n                <button\r\n                  @click=\"previousPage\"\r\n                  :disabled=\"!pagination.hasPrev\"\r\n                  class=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button\r\n                  @click=\"nextPage\"\r\n                  :disabled=\"!pagination.hasNext\"\r\n                  class=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Product Modal -->\r\n    <div v-if=\"showAddProductModal\" class=\"fixed inset-0 z-50 overflow-y-auto\">\r\n      <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n          <div class=\"absolute inset-0 bg-gray-500 opacity-75\" @click=\"showAddProductModal = false\"></div>\r\n        </div>\r\n\r\n        <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full\">\r\n          <form @submit.prevent=\"addProduct\" class=\"bg-white\">\r\n            <div class=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 class=\"text-lg leading-6 font-medium text-gray-900\">Add New Product</h3>\r\n            </div>\r\n            \r\n            <div class=\"px-6 py-4 max-h-96 overflow-y-auto\">\r\n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <!-- Basic Information -->\r\n                <div class=\"space-y-4\">\r\n                  <h4 class=\"font-medium text-gray-900\">Basic Information</h4>\r\n                  \r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 mb-1\">Product Name</label>\r\n                    <input\r\n                      v-model=\"newProduct.name\"\r\n                      type=\"text\"\r\n                      required\r\n                      class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"Enter product name\"\r\n                    >\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 mb-1\">SKU</label>\r\n                    <input\r\n                      v-model=\"newProduct.sku\"\r\n                      type=\"text\"\r\n                      required\r\n                      class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"Product SKU\"\r\n                    >\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 mb-1\">Brand</label>\r\n                    <input\r\n                      v-model=\"newProduct.brand\"\r\n                      type=\"text\"\r\n                      class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"Brand name\"\r\n                    >\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 mb-1\">Category</label>\r\n                    <select\r\n                      v-model=\"newProduct.categoryId\"\r\n                      required\r\n                      class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                    >\r\n                      <option value=\"\">Select a category</option>\r\n                      <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">\r\n                        {{ category.name }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div class=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <label class=\"block text-sm font-medium text-gray-700 mb-1\">Price</label>\r\n                      <input\r\n                        v-model.number=\"newProduct.price\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        min=\"0\"\r\n                        required\r\n                        class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                        placeholder=\"0.00\"\r\n                      >\r\n                    </div>\r\n                    <div>\r\n                      <label class=\"block text-sm font-medium text-gray-700 mb-1\">Original Price</label>\r\n                      <input\r\n                        v-model.number=\"newProduct.originalPrice\"\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        min=\"0\"\r\n                        class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                        placeholder=\"0.00\"\r\n                      >\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 mb-1\">Stock Quantity</label>\r\n                    <input\r\n                      v-model.number=\"newProduct.stock\"\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      required\r\n                      class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"0\"\r\n                    >\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\r\n                    <textarea\r\n                      v-model=\"newProduct.description\"\r\n                      rows=\"3\"\r\n                      class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"Product description\"\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Image Upload -->\r\n                <div class=\"space-y-4\">\r\n                  <h4 class=\"font-medium text-gray-900\">Product Images</h4>\r\n                  <ImageUploader\r\n                    v-model=\"newProduct.images\"\r\n                    :max-images=\"5\"\r\n                    :max-size-mb=\"2\"\r\n                    :show-image-details=\"true\"\r\n                    @upload-complete=\"handleImageUpload\"\r\n                    @upload-error=\"handleImageError\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"bg-gray-50 px-6 py-3 flex flex-row-reverse space-x-3 space-x-reverse\">\r\n              <button\r\n                type=\"submit\"\r\n                :disabled=\"isAddingProduct\"\r\n                class=\"inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                <span v-if=\"isAddingProduct\" class=\"flex items-center\">\r\n                  <div class=\"animate-spin -ml-1 mr-2 h-4 w-4 border-2 border-white border-t-transparent rounded-full\"></div>\r\n                  Adding...\r\n                </span>\r\n                <span v-else>Add Product</span>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                @click=\"cancelAddProduct\"\r\n                class=\"inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Stock Update Modal -->\r\n    <div v-if=\"showStockUpdateModal\" class=\"fixed inset-0 z-50 overflow-y-auto\">\r\n      <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n          <div class=\"absolute inset-0 bg-gray-500 opacity-75\" @click=\"showStockUpdateModal = false\"></div>\r\n        </div>\r\n\r\n        <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n          <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n            <div class=\"sm:flex sm:items-start\">\r\n              <div class=\"mt-3 text-center sm:mt-0 sm:text-left w-full\">\r\n                <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\r\n                  Update Stock - {{ selectedProduct?.name }}\r\n                </h3>\r\n                <div class=\"space-y-4\">\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 mb-2\">Current Stock</label>\r\n                    <p class=\"text-lg font-semibold\">{{ selectedProduct?.stock }} units</p>\r\n                  </div>\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 mb-2\">Operation</label>\r\n                    <select v-model=\"stockOperation\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\r\n                      <option value=\"set\">Set Stock Level</option>\r\n                      <option value=\"add\">Add Stock</option>\r\n                      <option value=\"subtract\">Remove Stock</option>\r\n                    </select>\r\n                  </div>\r\n                  <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      {{ stockOperation === 'set' ? 'New Stock Level' : 'Quantity' }}\r\n                    </label>\r\n                    <input\r\n                      v-model.number=\"stockQuantity\"\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n            <button\r\n              @click=\"updateStockLevel\"\r\n              class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n              Update Stock\r\n            </button>\r\n            <button\r\n              @click=\"showStockUpdateModal = false\"\r\n              class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useProductsStore } from '~/stores/products'\r\nimport { useNotificationsStore } from '~/stores/notifications'\r\nimport ImageUploader from '~/components/ImageUploader.vue'\r\n\r\ndefinePageMeta({\r\n  middleware: 'admin'\r\n})\r\n\r\nconst productsStore = useProductsStore()\r\nconst notifications = useNotificationsStore()\r\n\r\n// Reactive data\r\nconst searchQuery = ref('')\r\nconst selectedCategory = ref('')\r\nconst stockFilter = ref('')\r\nconst showAddProductModal = ref(false)\r\nconst showStockUpdateModal = ref(false)\r\nconst selectedProduct = ref(null)\r\nconst stockOperation = ref('set')\r\nconst stockQuantity = ref(0)\r\nconst isAddingProduct = ref(false)\r\n\r\n// New product form data\r\nconst newProduct = ref({\r\n  name: '',\r\n  sku: '',\r\n  brand: '',\r\n  categoryId: '',\r\n  price: 0,\r\n  originalPrice: 0,\r\n  stock: 0,\r\n  description: '',\r\n  images: []\r\n})\r\n\r\n// Reset new product form\r\nconst resetNewProduct = () => {\r\n  newProduct.value = {\r\n    name: '',\r\n    sku: '',\r\n    brand: '',\r\n    categoryId: '',\r\n    price: 0,\r\n    originalPrice: 0,\r\n    stock: 0,\r\n    description: '',\r\n    images: []\r\n  }\r\n}\r\n\r\n// Computed properties\r\nconst products = computed(() => productsStore.products)\r\nconst categories = computed(() => productsStore.categories)\r\n\r\nconst inStockCount = computed(() => \r\n  products.value.filter(p => p.stock > 0).length\r\n)\r\n\r\nconst lowStockCount = computed(() => \r\n  products.value.filter(p => p.stock > 0 && p.stock <= 10).length\r\n)\r\n\r\nconst outOfStockCount = computed(() => \r\n  products.value.filter(p => p.stock === 0).length\r\n)\r\n\r\nconst filteredProducts = computed(() => {\r\n  let filtered = [...products.value]\r\n\r\n  // Search filter\r\n  if (searchQuery.value) {\r\n    const query = searchQuery.value.toLowerCase()\r\n    filtered = filtered.filter(product =>\r\n      product.name.toLowerCase().includes(query) ||\r\n      product.brand.toLowerCase().includes(query) ||\r\n      product.sku.toLowerCase().includes(query)\r\n    )\r\n  }\r\n\r\n  // Category filter\r\n  if (selectedCategory.value) {\r\n    filtered = filtered.filter(product => \r\n      product.categoryId === parseInt(selectedCategory.value)\r\n    )\r\n  }\r\n\r\n  // Stock filter\r\n  if (stockFilter.value) {\r\n    switch (stockFilter.value) {\r\n      case 'in-stock':\r\n        filtered = filtered.filter(p => p.stock > 10)\r\n        break\r\n      case 'low-stock':\r\n        filtered = filtered.filter(p => p.stock > 0 && p.stock <= 10)\r\n        break\r\n      case 'out-of-stock':\r\n        filtered = filtered.filter(p => p.stock === 0)\r\n        break\r\n    }\r\n  }\r\n\r\n  return filtered\r\n})\r\n\r\nconst pagination = computed(() => productsStore.pagination)\r\n\r\n// Methods\r\nconst getStatusText = (stock) => {\r\n  if (stock === 0) return 'Out of Stock'\r\n  if (stock <= 10) return 'Low Stock'\r\n  return 'In Stock'\r\n}\r\n\r\nconst clearFilters = () => {\r\n  searchQuery.value = ''\r\n  selectedCategory.value = ''\r\n  stockFilter.value = ''\r\n}\r\n\r\nconst showStockModal = (product) => {\r\n  selectedProduct.value = product\r\n  stockQuantity.value = product.stock\r\n  showStockUpdateModal.value = true\r\n}\r\n\r\nconst updateStock = async (product) => {\r\n  try {\r\n    await productsStore.setStock(product.id, product.stock)\r\n    notifications.success('Stock updated successfully')\r\n  } catch (error) {\r\n    console.error('Failed to update stock:', error)\r\n    notifications.error('Failed to update stock')\r\n  }\r\n}\r\n\r\nconst updateStockLevel = async () => {\r\n  if (!selectedProduct.value) return\r\n\r\n  try {\r\n    await productsStore.updateInventory(\r\n      selectedProduct.value.id,\r\n      stockQuantity.value,\r\n      stockOperation.value\r\n    )\r\n    showStockUpdateModal.value = false\r\n    selectedProduct.value = null\r\n    notifications.success('Stock level updated successfully')\r\n  } catch (error) {\r\n    console.error('Failed to update stock level:', error)\r\n    notifications.error('Failed to update stock level')\r\n  }\r\n}\r\n\r\n// Product management methods\r\nconst addProduct = async () => {\r\n  if (isAddingProduct.value) return\r\n  \r\n  try {\r\n    isAddingProduct.value = true\r\n    \r\n    // Validate required fields\r\n    if (!newProduct.value.name || !newProduct.value.sku || !newProduct.value.categoryId) {\r\n      notifications.error('Please fill in all required fields')\r\n      return\r\n    }\r\n\r\n    // Prepare product data\r\n    const productData = {\r\n      ...newProduct.value,\r\n      categoryId: parseInt(newProduct.value.categoryId),\r\n      price: parseFloat(newProduct.value.price),\r\n      originalPrice: newProduct.value.originalPrice ? parseFloat(newProduct.value.originalPrice) : null,\r\n      stock: parseInt(newProduct.value.stock),\r\n      image: newProduct.value.images.find(img => img.isPrimary)?.url || newProduct.value.images[0]?.url || null,\r\n      images: newProduct.value.images.map(img => ({\r\n        url: img.url,\r\n        alt: img.alt,\r\n        caption: img.caption,\r\n        isPrimary: img.isPrimary\r\n      }))\r\n    }\r\n\r\n    await productsStore.addProduct(productData)\r\n    \r\n    showAddProductModal.value = false\r\n    resetNewProduct()\r\n    notifications.success('Product added successfully')\r\n    \r\n  } catch (error) {\r\n    console.error('Failed to add product:', error)\r\n    notifications.error('Failed to add product: ' + error.message)\r\n  } finally {\r\n    isAddingProduct.value = false\r\n  }\r\n}\r\n\r\nconst cancelAddProduct = () => {\r\n  showAddProductModal.value = false\r\n  resetNewProduct()\r\n}\r\n\r\nconst handleImageUpload = (images) => {\r\n  notifications.success(`${images.length} image(s) uploaded successfully`)\r\n}\r\n\r\nconst handleImageError = (error) => {\r\n  notifications.error('Image upload failed: ' + error.message)\r\n}\r\n\r\nconst editProduct = (product) => {\r\n  // Navigate to edit product page or show edit modal\r\n  navigateTo(`/admin/products/${product.id}/edit`)\r\n}\r\n\r\nconst deleteProduct = async (product) => {\r\n  if (confirm(`Are you sure you want to delete \"${product.name}\"?`)) {\r\n    try {\r\n      await productsStore.deleteProduct(product.id)\r\n      notifications.success('Product deleted successfully')\r\n    } catch (error) {\r\n      console.error('Failed to delete product:', error)\r\n      notifications.error('Failed to delete product')\r\n    }\r\n  }\r\n}\r\n\r\nconst previousPage = () => {\r\n  if (pagination.value.hasPrev) {\r\n    productsStore.setCurrentPage(pagination.value.currentPage - 1)\r\n    productsStore.fetchProducts()\r\n  }\r\n}\r\n\r\nconst nextPage = () => {\r\n  if (pagination.value.hasNext) {\r\n    productsStore.setCurrentPage(pagination.value.currentPage + 1)\r\n    productsStore.fetchProducts()\r\n  }\r\n}\r\n\r\n// Load data on mount\r\nonMounted(async () => {\r\n  await Promise.all([\r\n    productsStore.fetchProducts(),\r\n    productsStore.fetchCategories()\r\n  ])\r\n})\r\n</script>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA0fA,UAAM,gBAAgB,iBAAkB;AACxC,UAAM,gBAAgB,sBAAuB;AAG7C,UAAM,cAAc,IAAI,EAAE;AAC1B,UAAM,mBAAmB,IAAI,EAAE;AAC/B,UAAM,cAAc,IAAI,EAAE;AAC1B,UAAM,sBAAsB,IAAI,KAAK;AACrC,UAAM,uBAAuB,IAAI,KAAK;AACtC,UAAM,kBAAkB,IAAI,IAAI;AAChC,UAAM,iBAAiB,IAAI,KAAK;AAChC,UAAM,gBAAgB,IAAI,CAAC;AAC3B,UAAM,kBAAkB,IAAI,KAAK;AAGjC,UAAM,aAAa,IAAI;AAAA,MACrB,MAAM;AAAA,MACN,KAAK;AAAA,MACL,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,eAAe;AAAA,MACf,OAAO;AAAA,MACP,aAAa;AAAA,MACb,QAAQ,CAAE;AAAA,IACZ,CAAC;AAkBD,UAAM,WAAW,SAAS,MAAM,cAAc,QAAQ;AACtD,UAAM,aAAa,SAAS,MAAM,cAAc,UAAU;AAE1D,UAAM,eAAe;AAAA,MAAS,MAC5B,SAAS,MAAM,OAAO,OAAK,EAAE,QAAQ,CAAC,EAAE;AAAA,IAC1C;AAEA,UAAM,gBAAgB;AAAA,MAAS,MAC7B,SAAS,MAAM,OAAO,OAAK,EAAE,QAAQ,KAAK,EAAE,SAAS,EAAE,EAAE;AAAA,IAC3D;AAEA,UAAM,kBAAkB;AAAA,MAAS,MAC/B,SAAS,MAAM,OAAO,OAAK,EAAE,UAAU,CAAC,EAAE;AAAA,IAC5C;AAEA,UAAM,mBAAmB,SAAS,MAAM;AACtC,UAAI,WAAW,CAAC,GAAG,SAAS,KAAK;AAGjC,UAAI,YAAY,OAAO;AACrB,cAAM,QAAQ,YAAY,MAAM,YAAa;AAC7C,mBAAW,SAAS;AAAA,UAAO,aACzB,QAAQ,KAAK,cAAc,SAAS,KAAK,KACzC,QAAQ,MAAM,cAAc,SAAS,KAAK,KAC1C,QAAQ,IAAI,cAAc,SAAS,KAAK;AAAA,QACzC;AAAA,MACF;AAGD,UAAI,iBAAiB,OAAO;AAC1B,mBAAW,SAAS;AAAA,UAAO,aACzB,QAAQ,eAAe,SAAS,iBAAiB,KAAK;AAAA,QACvD;AAAA,MACF;AAGD,UAAI,YAAY,OAAO;AACrB,gBAAQ,YAAY,OAAK;AAAA,UACvB,KAAK;AACH,uBAAW,SAAS,OAAO,OAAK,EAAE,QAAQ,EAAE;AAC5C;AAAA,UACF,KAAK;AACH,uBAAW,SAAS,OAAO,OAAK,EAAE,QAAQ,KAAK,EAAE,SAAS,EAAE;AAC5D;AAAA,UACF,KAAK;AACH,uBAAW,SAAS,OAAO,OAAK,EAAE,UAAU,CAAC;AAC7C;AAAA,QACH;AAAA,MACF;AAED,aAAO;AAAA,IACT,CAAC;AAED,UAAM,aAAa,SAAS,MAAM,cAAc,UAAU;AAG1D,UAAM,gBAAgB,CAAC,UAAU;AAC/B,UAAI,UAAU,EAAG,QAAO;AACxB,UAAI,SAAS,GAAI,QAAO;AACxB,aAAO;AAAA,IACT;AA0FA,UAAM,oBAAoB,CAAC,WAAW;AACpC,oBAAc,QAAQ,GAAG,OAAO,MAAM,iCAAiC;AAAA,IACzE;AAEA,UAAM,mBAAmB,CAAC,UAAU;AAClC,oBAAc,MAAM,0BAA0B,MAAM,OAAO;AAAA,IAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}