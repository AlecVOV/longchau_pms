{"version":3,"file":"debug-reminders-DwG1hrlu.js","sources":["../../../../pages/debug-reminders.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-4xl mx-auto p-6\">\r\n    <h1 class=\"text-2xl font-bold mb-6\">Medication Reminder Debug Test</h1>\r\n    \r\n    <div class=\"space-y-6\">\r\n      <!-- Current State -->\r\n      <div class=\"bg-gray-100 p-4 rounded-lg\">\r\n        <h2 class=\"text-lg font-semibold mb-3\">Current State</h2>\r\n        <button @click=\"checkCurrentState\" class=\"btn-primary mb-3\">\r\n          Check Current State\r\n        </button>\r\n        <pre v-if=\"currentState\" class=\"bg-white p-3 rounded text-sm overflow-auto\">{{ JSON.stringify(currentState, null, 2) }}</pre>\r\n      </div>\r\n\r\n      <!-- Create Test Reminder -->\r\n      <div class=\"bg-blue-50 p-4 rounded-lg\">\r\n        <h2 class=\"text-lg font-semibold mb-3\">Create Test Reminder</h2>\r\n        <button @click=\"createTestReminder\" class=\"btn-primary mb-3\" :disabled=\"loading\">\r\n          {{ loading ? 'Creating...' : 'Create Test Reminder' }}\r\n        </button>\r\n        <pre v-if=\"createResult\" class=\"bg-white p-3 rounded text-sm overflow-auto\">{{ JSON.stringify(createResult, null, 2) }}</pre>\r\n      </div>\r\n\r\n      <!-- Load Reminders -->\r\n      <div class=\"bg-green-50 p-4 rounded-lg\">\r\n        <h2 class=\"text-lg font-semibold mb-3\">Load Reminders</h2>\r\n        <button @click=\"loadReminders\" class=\"btn-primary mb-3\">\r\n          Load Reminders from API\r\n        </button>\r\n        <pre v-if=\"loadResult\" class=\"bg-white p-3 rounded text-sm overflow-auto\">{{ JSON.stringify(loadResult, null, 2) }}</pre>\r\n      </div>\r\n\r\n      <!-- Delete Test -->\r\n      <div class=\"bg-red-50 p-4 rounded-lg\">\r\n        <h2 class=\"text-lg font-semibold mb-3\">Delete Test</h2>\r\n        <div class=\"flex gap-2 mb-3\">\r\n          <input \r\n            v-model=\"deleteId\" \r\n            type=\"number\" \r\n            placeholder=\"Reminder ID to delete\"\r\n            class=\"form-input flex-1\"\r\n          >\r\n          <button @click=\"deleteTestReminder\" class=\"btn-primary\">\r\n            Delete\r\n          </button>\r\n        </div>\r\n        <pre v-if=\"deleteResult\" class=\"bg-white p-3 rounded text-sm overflow-auto\">{{ JSON.stringify(deleteResult, null, 2) }}</pre>\r\n      </div>\r\n\r\n      <!-- Console Log -->\r\n      <div class=\"bg-yellow-50 p-4 rounded-lg\">\r\n        <h2 class=\"text-lg font-semibold mb-3\">Console Log</h2>\r\n        <div class=\"bg-white p-3 rounded text-sm max-h-40 overflow-auto\">\r\n          <div v-for=\"log in logs\" :key=\"log.id\" class=\"border-b py-1\">\r\n            <span class=\"text-gray-500 text-xs\">{{ log.time }}</span> - {{ log.message }}\r\n          </div>\r\n        </div>\r\n        <button @click=\"clearLogs\" class=\"btn-outline mt-2\">Clear Logs</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useAuthStore } from '~/stores/auth'\r\n\r\nconst authStore = useAuthStore()\r\nconst loading = ref(false)\r\nconst currentState = ref(null)\r\nconst createResult = ref(null)\r\nconst loadResult = ref(null)\r\nconst deleteResult = ref(null)\r\nconst deleteId = ref(1)\r\nconst logs = ref([])\r\n\r\nconst addLog = (message) => {\r\n  logs.value.unshift({\r\n    id: Date.now(),\r\n    time: new Date().toLocaleTimeString(),\r\n    message\r\n  })\r\n  console.log(message)\r\n}\r\n\r\nconst clearLogs = () => {\r\n  logs.value = []\r\n}\r\n\r\nconst checkCurrentState = async () => {\r\n  try {\r\n    addLog('Checking current state...')\r\n    const response = await $fetch('/api/debug/reminders')\r\n    currentState.value = response\r\n    addLog(`Current state: ${response.debug.totalReminders} reminders`)\r\n  } catch (error) {\r\n    addLog(`Error checking state: ${error.message}`)\r\n    currentState.value = { error: error.message }\r\n  }\r\n}\r\n\r\nconst createTestReminder = async () => {\r\n  loading.value = true\r\n  try {\r\n    addLog('Creating test reminder...')\r\n    const testData = {\r\n      medicationName: 'Test Medicine ' + Date.now(),\r\n      dosage: '100mg',\r\n      frequency: 'daily',\r\n      timeSlots: ['08:00', '20:00'],\r\n      notes: 'Test reminder for debugging'\r\n    }\r\n    \r\n    addLog(`Test data: ${JSON.stringify(testData)}`)\r\n    \r\n    const response = await $fetch('/api/medication-reminders', {\r\n      method: 'POST',\r\n      body: testData,\r\n      headers: {\r\n        Authorization: `Bearer ${authStore.token}`\r\n      }\r\n    })\r\n    \r\n    createResult.value = response\r\n    addLog(`✅ Reminder created successfully! ID: ${response.reminder.id}`)\r\n    \r\n    // Check state after creation\r\n    await checkCurrentState()\r\n    \r\n  } catch (error) {\r\n    addLog(`❌ Error creating reminder: ${error.message}`)\r\n    createResult.value = { error: error.message }\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst loadReminders = async () => {\r\n  try {\r\n    addLog('Loading reminders from API...')\r\n    const response = await $fetch('/api/medication-reminders', {\r\n      headers: {\r\n        Authorization: `Bearer ${authStore.token}`\r\n      }\r\n    })\r\n    \r\n    loadResult.value = response\r\n    addLog(`✅ Loaded ${response.reminders.length} reminders`)\r\n    \r\n  } catch (error) {\r\n    addLog(`❌ Error loading reminders: ${error.message}`)\r\n    loadResult.value = { error: error.message }\r\n  }\r\n}\r\n\r\nconst deleteTestReminder = async () => {\r\n  try {\r\n    addLog(`Attempting to delete reminder ID: ${deleteId.value}`)\r\n    \r\n    const response = await $fetch(`/api/medication-reminders/${deleteId.value}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${authStore.token}`\r\n      }\r\n    })\r\n    \r\n    deleteResult.value = response\r\n    addLog(`✅ Reminder deleted successfully!`)\r\n    \r\n    // Check state after deletion\r\n    await checkCurrentState()\r\n    \r\n  } catch (error) {\r\n    addLog(`❌ Error deleting reminder: ${error.message}`)\r\n    deleteResult.value = { error: error.message }\r\n  }\r\n}\r\n\r\n// Initial state check\r\nonMounted(() => {\r\n  addLog('Debug page loaded')\r\n  if (!authStore.token) {\r\n    addLog('❌ No auth token found - please login first')\r\n  }\r\n})\r\n</script>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAmEkB,iBAAc;AAChC,UAAM,UAAU,IAAI,KAAK;AACzB,UAAM,eAAe,IAAI,IAAI;AAC7B,UAAM,eAAe,IAAI,IAAI;AAC7B,UAAM,aAAa,IAAI,IAAI;AAC3B,UAAM,eAAe,IAAI,IAAI;AAC7B,UAAM,WAAW,IAAI,CAAC;AACtB,UAAM,OAAO,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}